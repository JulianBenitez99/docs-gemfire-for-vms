<a id="topic_AE5B406FAE7F4152B2919EDF45F4EE80"></a>

# list

List existing <span class="keyword">Geode</span> resources such as deployed applications, disk-stores, functions, members, servers, and regions.

-   **[list async-event-queues](../../../tools_modules/gfsh/command-pages/list.html#topic_j22_kzk_2l)**

    Display a list of async event queues for all members.

-   **[list clients](../../../tools_modules/gfsh/command-pages/list.html#topic_ts1_qb1_dk)**

    Displays a list of connected clients.

-   **[list deployed](../../../tools_modules/gfsh/command-pages/list.html#topic_59DF60DE71AD4097B281749425254BFF)**

    Display a list of JARs that were deployed to members using the deploy command.

-   **[list disk-stores](../../../tools_modules/gfsh/command-pages/list.html#topic_BC14AD57EA304FB3845766898D01BD04)**

    List all available disk stores across the <span class="keyword">Geode</span> cluster

-   **[list durable-cqs](../../../tools_modules/gfsh/command-pages/list.html#topic_66016A698C334F4EBA19B99F51B0204B)**

    List durable client CQs associated with the specified durable client id.

-   **[list functions](../../../tools_modules/gfsh/command-pages/list.html#topic_DCC7CCBBEF5942B783A8F2A4A5B2FABF)**

    Display a list of registered functions. The default is to display functions for all members.

-   **[list gateways](../../../tools_modules/gfsh/command-pages/list.html#topic_B1D89671C7B74074899C7D52F15849ED)**

    Displays the gateway senders and receivers for a member or members.

-   **[list indexes](../../../tools_modules/gfsh/command-pages/list.html#topic_B3B51B6DEA484EE086C4F657EC9831F2)**

    Display the list of indexes created for all members.

-   **[list members](../../../tools_modules/gfsh/command-pages/list.html#topic_5B5BFB2E5F314210858641BE3A689637)**

    Display all or a subset of members.

-   **[list regions](../../../tools_modules/gfsh/command-pages/list.html#topic_F0ECEFF26086474498598035DD83C588)**

    Display regions of a member or members. If no parameter is specified, all regions in the <span class="keyword">Geode</span> distributed system are listed.

<a id="topic_j22_kzk_2l"></a>

## list async-event-queues

Display a list of async event queues for all members.

**Availability:** Online. You must be connected in `gfsh` to a JMX Manager member to use this command.

**Syntax:**

``` pre
list async-event-queues
```

**Example Commands:**

``` pre
list async-event-queues
```

<a id="topic_ts1_qb1_dk"></a>

## list clients

Displays a list of connected clients.

Displays a list of connected clients and the servers they are connected to.

**Availability:** Online. You must be connected in `gfsh` to a JMX Manager member to use this command.

**Syntax:**

``` pre
list clients
```

**Example Commands:**

``` pre
list clients
```

**Sample Output:**

``` pre
gfsh>list clients

ClientList

            Client Name / ID              | Server Name / ID
----------------------------------------- | -----------------------------------------------------
172.16.196.144(4987:loner):58922:7b3398cf | member=server2,port=53508;  member=server1,port=56806
172.16.196.144(5065:loner):39906:a6f598cf | member=server2,port=53508;  member=server1,port=56806
```

<a id="topic_59DF60DE71AD4097B281749425254BFF"></a>

## list deployed

Display a list of JARs that were deployed to members using the deploy command.

**Availability:** Online. You must be connected in `gfsh` to a JMX Manager member to use this command.

**Syntax:**

``` pre
list deployed [--group=value(,value)*]
```

<a id="topic_59DF60DE71AD4097B281749425254BFF__table_ch5_b2g_2w"></a>

| Name                                          | Description                                                                                                          |
|-----------------------------------------------|----------------------------------------------------------------------------------------------------------------------|
| <span class="keyword parmname">--group</span> | Group(s) of members for which deployed JARs will be displayed. If not specified, JARs for all members are displayed. |

: <span class="tablecap">Table 1. Parameters</span>

**Example Commands:**

``` pre
list deployed
list deployed --group=Group2
```

**Sample Output:**

``` pre
gfsh> list deployed  --group=Group2

 Member   |     Deployed JAR     |                JAR Location            
--------- | -------------------- | ---------------------------------------------------
datanode1 | group1_functions.jar | /usr/local/gemfire/deploy/vf.gf#group1_functions.jar#1
datanode2 | group1_functions.jar | /usr/local/gemfire/deploy/vf.gf#group1_functions.jar#1
```

**Error Messages:**

``` pre
No JAR Files Found
```

<a id="topic_BC14AD57EA304FB3845766898D01BD04"></a>

## list disk-stores

List all available disk stores across the <span class="keyword">Geode</span> cluster

The command also lists the configured disk directories and any Regions, Cache Servers, Gateways, PDX Serialization and Async Event Queues using Disk Stores to either overflow and/or persist information to disk. Use the `describe                         disk-store` command to see the details for a particular Disk Store.

**Availability:** Online. You must be connected in `gfsh` to a JMX Manager member to use this command.

**Syntax:**

``` pre
list disk-stores
```

**Example Commands:**

``` pre
list disk-stores
```

**Sample Output:**

``` pre
gfsh> list disk-stores

   Member Name   |                   Member Id                   | Disk Store Name |            Disk Store ID            
  -------------- | --------------------------------------------- | --------------- | ------------------------------------
  consumerServer | 10.237.177.10(consumerServer:13825)<v5>:3545  | consumerData    | 4029af26-fd82-4997-bd6c-33382cdbb5e9
  consumerServer | 10.237.177.10(consumerServer:13825)<v5>:3545  | observerData    | 7e0316ad-963c-49b0-9b01-8f59b8d9e29e
  producerServer | 10.237.177.10(producerServer:13826)<v3>:53764 | producerData    | 4670e4eb-1c50-4465-b418-08ede3d5dbed
```

**Error Messages:**

``` pre
gfsh> list disk-stores
No Disk Stores Found 
        
```

<a id="topic_66016A698C334F4EBA19B99F51B0204B"></a>

## list durable-cqs

List durable client CQs associated with the specified durable client id.

**Availability:** Online. You must be connected in `gfsh` to a JMX Manager member to use this command.

**Syntax:**

``` pre
list durable-cqs --durable-client-id=value [--member=value] [--group=value]
```

<a id="topic_66016A698C334F4EBA19B99F51B0204B__table_esj_32g_2w"></a>

| Name                                                       | Description                                                                                            |
|------------------------------------------------------------|--------------------------------------------------------------------------------------------------------|
| <span class="keyword parmname">--durable-client-id </span> | *Required.* The ID used to identify the durable client.                                                |
| <span class="keyword parmname">--member</span>             | Name or Id of the member for which the durable client is registered and durable CQs will be displayed. |
| <span class="keyword parmname">--group</span>              | Group of members for which the durable client is registered and durable CQs will be displayed.         |

: <span class="tablecap">Table 2. Parameters</span>

**Example Commands**:

``` pre
list durable-cqs --durable-client-id=client1
```

**Sample Output**:

``` pre
gfsh>list durable-cqs --durable-client-id=client1
member  | durable-cq-name
------- | ---------------
server3 | cq3
        | cq1
        | cq2
server4 | cq3
        | cq1
```

**Error Messages:**

``` pre
gfsh>list durable-cqs --durable-client-id=client1

Unable to list durable-cqs for durable-client-id : "client1" due to following reasons.

No client found with client-id : client1
Occurred on members
1.server4
2.server1
3.server3
```

<a id="topic_DCC7CCBBEF5942B783A8F2A4A5B2FABF"></a>

## list functions

Display a list of registered functions. The default is to display functions for all members.

**Availability:** Online. You must be connected in `gfsh` to a JMX Manager member to use this command.

**Syntax:**

``` pre
list functions [--matches=value] [--group=value(,value)*] 
[--member=value(,value)*]
```

<a id="topic_DCC7CCBBEF5942B783A8F2A4A5B2FABF__table_d3y_l2g_2w"></a>

| Name                                             | Description                                                                                                                                                                                     |
|--------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| <span class="keyword parmname">--matches </span> | Pattern that the function ID must match in order to be included. Uses Java pattern matching rules, not UNIX. For example, to match any character any number of times use ".\*" instead of "\*". |
| <span class="keyword parmname">--group</span>    | Group(s) of members for which functions will be displayed. Use a comma separated list for multiple groups.                                                                                      |
| <span class="keyword parmname">--member </span>  | Name or ID of the member(s) for which functions will be displayed. Use a comma separated list for multiple members.                                                                             |

: <span class="tablecap">Table 3. Parameters</span>

**Example Commands:**

``` pre
gfsh> list functions
gfsh> list functions --matches=reconcile.*
```

**Sample Output:**

``` pre
list functions

   Member   |          Function   
  --------- | --------------------------
  camelot   | loadDataFromExternalSource
  camelot   | reconcileWeeklyExpenses
  excalibur | loadDataFromExternalSource
  excalibur | reconcileDailyExpenses


Example of 'list function' with a "matches" filter:

gfsh> list functions --matches=reconcile.*

   Member   |        Function   
  --------- | -----------------------
  camelot   | reconcileWeeklyExpenses
  excalibur | reconcileDailyExpenses


Example of 'list functions' when no functions are found in Geode :

gfsh> list functions
No Functions Found.
```

<a id="topic_B1D89671C7B74074899C7D52F15849ED"></a>

## list gateways

Displays the gateway senders and receivers for a member or members.

**Availability:** Online. You must be connected in `gfsh` to a JMX Manager member to use this command.

**Syntax:**

``` pre
list gateways [--group=value(,value)*]
```

<a id="topic_B1D89671C7B74074899C7D52F15849ED__table_n3w_q2g_2w"></a>

| Name                                           | Description                                                                                                                    |
|------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------|
| <span class="keyword parmname">--member</span> | Member(s) whose gateways senders and receiver display.                                                                         |
| <span class="keyword parmname">--group</span>  | Group(s) of members for which Gateway Senders and Receivers will be displayed. Use a comma separated list for multiple groups. |

: <span class="tablecap">Table 4. Parameters</span>

**Example Commands:**

``` pre
list gateways
```

<a id="topic_B3B51B6DEA484EE086C4F657EC9831F2"></a>

## list indexes

Display the list of indexes created for all members.

**Availability:** Online. You must be connected in `gfsh` to a JMX Manager member to use this command.

**Syntax:**

``` pre
list indexes [--with-stats(=value)?]
```

<a id="topic_B3B51B6DEA484EE086C4F657EC9831F2__table_hth_t2g_2w"></a>

| Name                                               | Description                                            | Default Value |
|----------------------------------------------------|--------------------------------------------------------|---------------|
| <span class="keyword parmname">--with-stats</span> | Specifies whether statistics should also be displayed. | false         |

: <span class="tablecap">Table 5. Parameters </span>

**Example Commands:**

``` pre
list indexes

list indexes --with-stats
```

**Sample Output:**

``` pre
gfsh>list indexes
Member Name    |                   Member ID                   | Region Path |   Name   | Type  | Indexed Expression | From Clause
-------------- | --------------------------------------------- | ----------- | -------- | ----- | ------------------ | -----------
consumerServer | 10.237.177.10(consumerServer:13873):6317      | /consumers  | cidIdx   | KEY   | id                 | /consumers  
consumerServer | 10.237.177.10(consumerServer:13873):6317      | /consumers  | cnameIdx | RANGE | name               | /consumers
producerServer | 10.237.177.10(producerServer:13874):19198     | /producers  | pidIdx   | RANGE | id                 | /producers

Example of 'list indexes' with stats printed:

gfsh>list indexes --with-stats

Member Name  | Member ID | Region Path |   Name   | Type  | Indexed Expression | From Clause | Uses | Updates | Update Time | Keys | Values
------------ | --------- | ----------- | -------- | ----- | ------------------ | ----------- | ---- | ------- | ----------- | ---- | ------
cs...        | 10...     | /consumers  | cidIdx   | KEY   | id                 | /consumers  | 2512 | 0       | 0           | 5020 | 5020  
cs...        | 10...     | /consumers  | cnameIdx | RANGE | name               | /consumers  | 0    | 5020    | 421224000   | 0    | 5020  
ps...        | 10...     | /producers  | pidIdx   | RANGE | id                 | /producers  | 0    | 5031    | 497872000   | 5031 | 5031  
```

**Error Messages:**

Example of output when no indexes are found in <span class="keyword">Geode</span>:

``` pre
gfsh> list indexes
No Indexes Found
```

<a id="topic_5B5BFB2E5F314210858641BE3A689637"></a>

## list members

Display all or a subset of members.

**Availability:** Online. You must be connected in `gfsh` to a JMX Manager member to use this command.

**Syntax:**

``` pre
list members [--group=value]
```

<a id="topic_5B5BFB2E5F314210858641BE3A689637__table_r2h_x2g_2w"></a>

| Name                                          | Description                                     |
|-----------------------------------------------|-------------------------------------------------|
| <span class="keyword parmname">--group</span> | Group name for which members will be displayed. |

: <span class="tablecap">Table 6. Parameters</span>

**Example Commands:**

``` pre
list members
list members --group=Group1
```

**Sample Output:**

``` pre
gfsh>list members
  Name   | Id
-------- | -------------------------------------
server1  | GemFireStymon(server1:888)<v7>:10839
server2  | GemFireStymon(server2:3260)<v8>:16721
locator1 | localhost(locator1:216:locator):33368
```

<a id="topic_F0ECEFF26086474498598035DD83C588"></a>

## list regions

Display regions of a member or members. If no parameter is specified, all regions in the <span class="keyword">Geode</span> distributed system are listed.

**Syntax:**

``` pre
list regions [--group=value] [--member=value]
```

<a id="topic_F0ECEFF26086474498598035DD83C588__table_ckh_1fg_2w"></a>

| Name                                            | Description                                                                 |
|-------------------------------------------------|-----------------------------------------------------------------------------|
| <span class="keyword parmname">--group</span>   | Group of members for which regions will be displayed.                       |
| <span class="keyword parmname">--member </span> | Name or ID of the member of the member for which regions will be displayed. |

: <span class="tablecap">Table 7. Parameters</span>

**Example Commands:**

``` pre
list regions
list regions --group=G1
list regions --member=member1
```

**Sample Output:**

``` pre
gfsh>list regions
List of regions
---------------
region1
region2
```


