---
title:  Why Use <span class="keyword">GemFire</span> with Hibernate?
---

Using <span class="keyword">Pivotal GemFire</span> with Hibernate improves performance and scalability, gives you flexible caching options, and more.

-   **General**

    -   <span class="keyword">GemFire</span>'s L2 cache solution improves Hibernate performance
    -   Reduces traffic to your database server
    -   Simple to configure: requires just a few changes to `hibernate.cfg.xml`
    -   Flexible caching options, supporting several local and distributed configurations
    -   Access to many of the <span class="keyword">GemFire</span> features
-   **Performance**

    -   Mesh-like architecture provides single hop access to any entity
    -   Designed to minimize serialization costs
-   **Scalability**

    -   Data can be partitioned across the entire cluster
    -   Smart heap utilization / smart eviction algorithm
    -   Supports all Hibernate concurrency strategies (read only, read/write, non-strict read/write, transactional)
    -   Ensures data consistency without expensive distributed locks
    -   Overflow to disk on each system member for a shared-nothing persistence
    -   Supports tiered caching


