---
title:  General Information on HTTP Session Management
---

This section provides information on sticky load balancers, session expiration, additional <span class="keyword">GemFire</span> property changes, serialization and more.

<a id="tc_additional_info__section_78F53B3F4301466EA0E5DF277CF33A71"></a>
## Sticky Load Balancers

Typically, session replication will be used in conjunction with a load balancer enabled for sticky sessions. This involves, among other things, establishing a JVM route (`JVMRoute=value`). Refer to [SpringSource ERS](http://static.springsource.com/projects/ers/4.0/getting-started/htmlsingle/getting-started.html) as a possible [load balancing](http://static.springsource.com/projects/ers/4.0/getting-started/htmlsingle/getting-started.html#load-balancing) solution.

<a id="tc_additional_info__section_C7C4365EA2D84636AE1586F187007EC4"></a>

## Session Expiration

To set the session expiration value, you must change the `session-timeout` value specified in your application server's `WEB-INF/web.xml` file. This value will override the <span class="keyword">GemFire</span> inactive interval specified by `maxInactiveInterval` within `context.xml`.

<a id="tc_additional_info__section_5CE5FF6F55DB462E8B2A336A0AF7515E"></a>

## Making Additional <span class="keyword">GemFire</span> Property Changes

If you want to change additional <span class="keyword">GemFire</span> property values, refer to instructions on manually changing property values as specified in the <span class="keyword">GemFire</span> module documentation for Tomcat ([Changing the Default GemFire Configuration in the Tomcat Module](tomcat_changing_gf_default_cfg.html#tomcat_changing_gf_default_cfg)) and Application Servers ([Changing the Default GemFire Configuration in the AppServers Module](weblogic_changing_gf_default_cfg.html#weblogic_changing_gf_default_cfg)).

<a id="tc_additional_info__section_0013BDC875A44344B7B062F46AFA073C"></a>

## Module Version Information

To acquire <span class="keyword">GemFire</span> module version information, look in the web server's log file for a message similar to:

``` pre
INFO: Initializing Geode Modules
Java version:   1.0.0-incubating.M3-SNAPSHOT user1 041216 2016-04-12 11:18:37 -0700
          javac 1.8.0_77
Native version: native code unavailable
Source revision: 857bb75916640a066eb832b43b3c805f0dd7ed0b
Source repository: develop
Running on: /10.118.33.250, 8 cpu(s), x86_64 Mac OS X 10.11.4
```

## Object Serialization

Objects managed by the HTTP Session Management Module must be serializable since the session's objects are serialized before being stored in the region.


