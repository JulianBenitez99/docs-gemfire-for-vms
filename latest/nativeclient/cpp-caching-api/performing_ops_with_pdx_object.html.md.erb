---
title:  Performing put, get, and localDestroy Operations with a PDX Domain Object
---

This topic demonstrates how you can perform operations on a PDX domain object after you have implemented PDX serializable in your domain class.

For example, you can perform operations like put, get, and localDestroy with the domain class you defined for PDX serialization in the [PdxSerializable Example](pdxserializable_interface.html#concept_79E4C10E5F634A7F84F96633694B3D69__example_70237026967A42898584AE644D437E69).

To perform operations, you could write the following application code:

1.  Register the PDX domain class.

    ``` pre
    Serializable::registerPdxType(PdxObject::createDeserializable);
    ```

2.  Create the PDX domain object `PdxObject`.

    ``` pre
    CacheablePtr pdxobj(new PdxObject(100, "Value-1"));
    CacheableKeyPtr keyport = CacheableKey::create("ABC");
    ```

3.  Here's an example of a put operation.

    ``` pre
    rptr->put(keyport, pdxobj);
    ```

4.  Here's an example of locally destroying the entry.

    ``` pre
    rptr->localDestroy(keyport);
    ```

5.  Here's an example of a get operation.

    ``` pre
    PdxObject *obj2 = dynamic_cast<PdxObject *> ((rptr->get(keyport)).ptr());
    LOGINFO("Debug:Returned ID = %d", obj2->getID());
    ```


