---
title:  Transactions
---

*Transactions* describes how transactions work on the client side. It provides examples for running, suspending, and resuming transactions.

**Note:**
<span class="keyword">Geode</span> client transactions run on the server tier. The client uses a server delegate that runs the transaction as it would a local transaction. Thus, the key to running client transactions lies in making sure the server is properly configured and programmed. For complete information about <span class="keyword">Geode</span> transactions in the Java server, see [Transactions](../../developing/transactions/chapter_overview.html). It provides detailed information including server data requirements, interactions of <span class="keyword">Geode</span> transactions with other operations running on the server tier, server-side application plug-ins with transactions, and querying with transactions.

-   **[How Native Client Transactions Work](../../nativeclient/transactions/how-native-client-xacts-work.html)**

    The syntax for writing client transactions is the same as with server or peer transactions, but when a client performs a transaction, the transaction is delegated to a server that brokers the transaction.

-   **[Running a Native Client Transaction](../../nativeclient/transactions/running-native-client-xact.html)**

    Before you can run a native client transaction, you must configure your clients and servers; define your server regions for your transactions; and define your client regions.

-   **[Suspending and Resuming Transactions](../../nativeclient/transactions/suspend-resume-xacts.html)**

    The ability to suspend and resume transactions is useful when a thread must perform operations that should not be part of the transaction before the transaction can complete.


