---
title:  About the Native Client Cache
---

The cache consists of data regions, each of which can contain any number of entries. Region entries hold the cached data. Every entry has a key that uniquely identifies it within the region and a value where the data object is stored.

The `Cache` instance allows your process to set general parameters for communication between a cache and other caches in the distributed system, and to create and access any region in the cache.

Regions are created from the `Cache` instance. Regions provide the entry point to the interfaces for instances of `Region` and `RegionEntry`.

<a id="native-client-cache__section_A0F2E9EF30324736BD0D5F92FE3D1BD7"></a>
## Main Features and Functionality

The native client cache provides the following features and functionality.

-   Local and distributed data caching for fast access.
-   Data distribution between applications on the same or different platforms.
-   Local and remote data loading through application plug-ins.
-   Application plug-ins for synchronous and asynchronous handling of data events.
-   Automated and application-specific data eviction for freeing up space in the cache, including optional overflow to disk.
-   System message logging, and statistics gathering and archiving.

For more information specific to your client programming language, see the online API documentation and [Pivotal GemFire Native Client C++ API](../cpp-caching-api/cpp-caching-api.html#concept_CEC658A999414AC3A494578C214BF64E) and [Pivotal GemFire Native Client .NET Caching API](../dotnet-caching-api/dotnet-caching-api.html#concept_FC6776DCE6ED48B887A6137761104AA4).


