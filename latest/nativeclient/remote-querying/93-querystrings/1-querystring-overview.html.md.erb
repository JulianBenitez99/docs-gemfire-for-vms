---
title:  Using Query Strings in the Native Client
---

To use a query string in a native client, specify the string as a parameter in a `QueryService::newQuery` method, then execute the query using `Query::execute`, passing in the required parameters.

Alternatively, if an expression evaluates to a boolean value, you can specify it using the region shortcut methods `Region::existsValue`, `Region::selectValue`, and `Region::query`. These shortcut methods evaluate whether given expressions return any entries and return a single value entry, respectively. See [Region Shortcut Query Methods](../95-remotequeryapi/2-create-manage-queries.html#running-native-client-xact__section_0F92AD1BDB29426BB24CD41F5A0FAB78) for more information about these shortcut methods.

If your query requires any `IMPORT` statements, you must include these before the `SELECT` statement in the query string that is passed to the query engine. It should be a fully qualified package name relative to the cache server. The Java class definition must exist and have the exact footprint as the native client C++ class.

-   **[FROM Clause](../../../nativeclient/remote-querying/93-querystrings/3-from-clause.html)**

    The `FROM` clause establishes collections of objects that are iterated over by the remainder of the query.

-   **[SELECT Projection List](../../../nativeclient/remote-querying/93-querystrings/6-select-projection-list.html)**

    The projections in the SELECT projection list are used to transform the results of the WHERE search operation.

-   **[SELECT Statement Query Results](../../../nativeclient/remote-querying/93-querystrings/7-select-statement-query-results.html)**

    The result of a `SELECT` statement is a collection that implements the `SelectResults` interface or it is `UNDEFINED`.

-   **[WHERE Clause](../../../nativeclient/remote-querying/93-querystrings/4-where-clause.html)**

    The optional WHERE clause defines the search criteria for the selection, filtering the set of elements specified by the FROM clause.

-   **[Joins](../../../nativeclient/remote-querying/93-querystrings/5-joins.html)**

    If collections in the `FROM` clause are not related to each other, you can use the `WHERE` clause to join them.


