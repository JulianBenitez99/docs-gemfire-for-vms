<a id="transactions_by_region_type"></a>

# Client Transactions

The syntax for writing client transactions is the same on the Java client as with any other <span class="keyword">GemFire</span> member, but the underlying behavior in a client-run transaction is different from general transaction behavior.

For general information about running a transaction, refer to [How to Run a GemFire Cache Transaction](run_a_cache_transaction.html#task_f15_mr3_5k).

-   **[How GemFire Runs Client Transactions](../../../latest/developing/transactions/client_server_transactions.html#how_gemfire_runs_clients)**

-   **[Client Cache Access During a Transaction](../../../latest/developing/transactions/client_server_transactions.html#client_cache_access)**

-   **[Client Transactions and Client Application Plug-Ins](../../../latest/developing/transactions/client_server_transactions.html#client_app_plugins)**

-   **[Client Transaction Failures](../../../latest/developing/transactions/client_server_transactions.html#client_transaction_failures)**

## How <span class="keyword">GemFire</span> Runs Client Transactions

When a client performs a transaction, the transaction is delegated to a server that acts as the transaction initiator in the server system. As with regular, non-client transactions, this server delegate may or may not be the transaction host.

In this figure, the application code on the client makes changes to data entries Y and Z within a transaction. The delegate performing the transaction (M1) does not host the primary copy of the data being modified. The transaction takes place on the server containing this data (M2).

<img src="../../images/transactions-client-1.png" id="how_gemfire_runs_clients__image_5DCA65F2B88F450299EFD19DAAA93D4F" class="image" />

## Client Cache Access During a Transaction

To maintain cache consistency, <span class="keyword">GemFire</span> blocks access to the local client cache during a transaction. The local client cache may reflect information inconsistent with the transaction in progress. When the transaction completes, the local cache is accessible again.

## Client Transactions and Client Application Plug-Ins

Any plug-ins installed in the client are not invoked by the client-run transaction. The client that initiates the transaction receives changes from its server based on transaction operations the same as any other client - through mechanisms like subscriptions and continuous query results. The client transaction is performed by the server delegate, where application plug-ins operate the same as if the server were the sole initiator of the transaction.

## Client Transaction Failures

In addition to the failure conditions common to all transactions, client transactions can fail if the transaction delegate fails. If the delegate performing the transaction fails, the transaction code throws a transaction exception. See [Transaction Exceptions](monitor_troubleshoot_transactions.html#monitor_troubleshoot_transactions__section_8942ABA6F23C4ED58877C894B13F4F21).


