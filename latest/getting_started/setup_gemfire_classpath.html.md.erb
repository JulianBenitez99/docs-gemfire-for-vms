---
title:  CLASSPATH Settings for <span class="keyword">GemFire</span> Processes
---

This topic describes how <span class="keyword">GemFire</span> processes set their CLASSPATH.

To simplify CLASSPATH environment settings, <span class="keyword">GemFire</span> has organized all application libraries required by <span class="keyword">GemFire</span> processes into `*-dependencies.jar` files. All dependency JAR files are located in the `path_to_product/lib` directory. When starting a server or locator process using `gfsh`, the required application JAR files are automatically loaded into the process's CLASSPATH for you.

**Note:**
To embed <span class="keyword">GemFire</span> in your application, add `path_to_product/lib/geode-dependencies.jar` to your CLASSPATH.

The following table lists the dependency JAR files associated with various <span class="keyword">GemFire</span> processes:

<table>
<colgroup>
<col width="50%" />
<col width="50%" />
</colgroup>
<thead>
<tr class="header">
<th><span class="keyword">GemFire</span> Process</th>
<th>Associated JAR Files</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>gfsh</td>
<td>gfsh-dependencies.jar</td>
</tr>
<tr class="even">
<td>server and locator</td>
<td>geode-dependencies.jar
<div class="note note">
**Note:**
<p>Use this library for all standalone or embedded <span class="keyword">GemFire</span> processes (including Java clients) that host cache data.</p>
</div></td>
</tr>
</tbody>
</table>

## Modifying the CLASSPATH in gfsh-Managed Processes

There are two options for updating the CLASSPATH of <span class="keyword">GemFire</span> server and locator processes that are started on the gfsh command line.

**Option 1:** Specify the `--classpath` parameter upon process startup. For example, to modify the CLASSPATH of a locator:

``` pre
gfsh> start locator --name=locator1 --classpath=/path/to/applications/classes.jar
```

And to modify the CLASSPATH of a server:

``` pre
 gfsh> start server --name=server1 --classpath=/path/to/applications/classes.jar
```

Application classes supplied as arguments to the `--classpath` option are *prepended* to the server or locator's CLASSPATH, beginning in second position. The first entry in the CLASSPATH is reserved for the core <span class="keyword">GemFire</span> jar file, for security reasons.

**Option 2:** Define the CLASSPATH environment variable in your OS environment. Then, specify the `--include-system-classpath` parameter upon process startup. For example:

``` pre
gfsh> start locator --name=locator1 --include-system-classpath=true
```

The same can also be done for server processes:

``` pre
gfsh> start server --name=server1 --include-system-classpath=true
```

This option *appends* the contents of the system CLASSPATH environment variable to the locator or server's CLASSPATH upon startup. Specifying this option without a value sets it to true.

## Setting the CLASSPATH for Applications and Standalone Java Processes

If you are starting a <span class="keyword">GemFire</span> process programmatically (standalone or embedded), we recommend that you specify the CLASSPATH upon program execution using the `java -classpath` or `java -cp` command-line option. This method is preferred to setting the CLASSPATH as an environment variable since it allows you to set the value individually for each application without affecting other applications and without other applications modifying its value.

For example, to start up a <span class="keyword">GemFire</span> locator process using the LocatorLauncher API, you can execute the following on the command line:

``` pre
prompt# java -cp "path_to_product/lib/geode-dependencies.jar"
com.gemstone.gemfire.distributed.LocatorLauncher start locator1
<locator-launcher-options>
```

To start up a <span class="keyword">GemFire</span> server process using the ServerLauncher API:

``` pre
prompt# java -cp "path_to_product/lib/geode-dependencies.jar:/path/to/your/applications/classes.jar"
com.gemstone.gemfire.distributed.ServerLauncher start server1
<server-launcher-options>
```

Note that in addition to the `*-dependencies.jar` file associated with the process, you must also specify any custom application JARs that you wish to access in your <span class="keyword">GemFire</span> process. For example, if you are planning on using a customized compressor on your regions, you should specify the application JAR that contains the compressor application you wish to use.

To start up an application with an embedded cache:

``` pre
java -cp "path_to_product/lib/geode-dependencies.jar:/path/to/your/applications/classes.jar"
com.mycompany.package.ApplicationWithEmbeddedCache
```

**Note:**
Another method for updating the CLASSPATH of a server process with your own applications is to use the `gfsh deploy` command. Deploying application JAR files will automatically update the CLASSPATH of all members that are targeted for deployment. See [Deploying Application JARs to Pivotal GemFire Members](../configuring/cluster_config/deploying_application_jars.html#concept_4436C021FB934EC4A330D27BD026602C) for more details.


