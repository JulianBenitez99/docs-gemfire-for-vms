---
title:  Managing a Cache in a Secure System
---

When you create your cache in a secure system, you provide credentials to the connection process for authentication by already-running, secure members. Clients connect to secure servers. Peers are authenticated by secure locators or peer members.

<a id="managing_a_secure_cache__section_11BF0F3F64504B74B39CD4C1CF58E6FC"></a>
Follow these steps in addition to the steps for implementing security implementation for your peer, server, and client members. See [Managing a Peer or Server Cache](managing_a_peer_server_cache.html#creating_and_closing_a_peer_cache) and [Managing a Client Cache](managing_a_client_cache.html#managing_a_client_cache).

1.  To create your cache:
    1.  Add any necessary security properties to the `gemfire.properties` or `gfsecurity.properties` file, to configure <span class="keyword">Apache Geode</span> for your particular security implementation. Examples:

        ``` pre
        security-client-auth-init=mySecurity.UserPasswordAuthInit.create
        ```

        ``` pre
        security-peer-auth-init=myAuthPkg.myAuthInitImpl.create
        ```

    2.  When you create your cache, pass any properties required by your security implementation to the cache factory create call by using one of these methods:
        -   `ClientCacheFactory` or `CacheFactory` `set` methods. Example:

            ``` pre
            ClientCache clientCache = new ClientCacheFactory()
                .set("security-username", username)
                .set("security-password", password)
                .create();
            ```

        -   Properties object passed to the `ClientCacheFactory` or `CacheFactory` `create` method. These are usually properties of a sensitive nature that you do not want to put inside the `gfsecurity.properties` file. Example:

            ``` pre
            Properties properties = new Properties();
            properties.setProperty("security-username", username);
            properties.setProperty("security-password", password);
            Cache cache = new CacheFactory(properties).create();
            ```

            **Note:**
            Properties passed to a cache creation method override any settings in either the `gemfire.properties` file or `gfsecuirty.properties`.

2.  Close your cache when you are done, using the `close` method of the `ClientCache` instance or the inherited `close` method of the `Cache` instance. Example:

    ``` pre
    cache.close();
    ```


