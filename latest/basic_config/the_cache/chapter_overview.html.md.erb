---
title:  Cache Management
---

The <span class="keyword">Geode</span> cache is the entry point to <span class="keyword">Geode</span> caching management. <span class="keyword">Geode</span> provides different APIs and XML configuration models to support the behaviors of different members.

-   **[Introduction to Cache Management](../../basic_config/the_cache/intro_cache_management.html)**

    The cache provides in-memory storage and management for your data.

-   **[Managing a Peer or Server Cache](../../basic_config/the_cache/managing_a_peer_server_cache.html)**

    You start your peer or server cache using a combination of XML declarations and API calls. Close the cache when you are done.

-   **[Managing a Client Cache](../../basic_config/the_cache/managing_a_client_cache.html)**

    You have several options for client cache configuration. Start your client cache using a combination of XML declarations and API calls. Close the client cache when you are done.

-   **[Managing a Cache in a Secure System](../../basic_config/the_cache/managing_a_secure_cache.html)**

    When you create your cache in a secure system, you provide credentials to the connection process for authentication by already-running, secure members. Clients connect to secure servers. Peers are authenticated by secure locators or peer members.

-   **[Managing RegionServices for Multiple Secure Users](../../basic_config/the_cache/managing_a_multiuser_cache.html)**

    In a secure system, you can create clients with multiple, secure connections to the servers from each client. The most common use case is a <span class="keyword">Geode</span> client embedded in an application server that supports data requests from many users. Each user may be authorized to access a subset of data on the servers. For example, customer users may be allowed to see and update only their own orders and shipments.

-   **[Launching an Application after Initializing the Cache](../../basic_config/the_cache/setting_cache_initializer.html)**

    You can specify a callback application that is launched after the cache initialization.


