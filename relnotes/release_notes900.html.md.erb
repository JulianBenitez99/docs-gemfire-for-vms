---
title: Pivotal GemFire 9.0.0-beta.1 Release Notes
---
<a id="topic_GF900ReleaseNotes"></a>

## <a id="topic_whatsnew" class="no-quick-link"></a>What's New in Pivotal GemFire 9.0.0-beta.1

- Pivotal GemFire 9.0.0-beta.1 is based on Apache Geode (incubating),
providing all the benefits of open source software.

- Region values may be stored in off heap memory,
instead of heap memory.
Off heap memory is not subject to Java garbage collection,
leading to performance advantages for some applications.
See [Managing Off-Heap Memory](/geode/managing/heap_use/off_heap_management.html) for details.

- The new Integrated Security feature provides a simpler and more powerful 
way of doing authentication and authorization.
See [Security](/geode/managing/security/chapter_overview.html) for details.
Users of GemFire 8.x should strongly consider reimplementing system-wide
security measures under the new method,
especially since
the 8.x Authenticator and AccessControl APIs have been superseded by
the new interface.
The 8.x implementation is supported, but is now deprecated.
If any 9.0 integrated security properties
are specified (such as `security-manager`),
GemFire will not honor the 8.x configuration and the
entire app must migrate to the 9.0 scheme.


- A new scheme for configuring SSL is both simpler and more powerful than 
its predecessor. 
The older SSL configuration scheme used separate,
single-valued properties with component-specific prefixes
such as `cluster-` and `server-`.
The new configuration scheme uses a simpler naming scheme
in which a smaller number of properties using the `ssl-` prefix
can take multiple values.
See [SSL](/geode/managing/security/ssl_overview.html) for details.

    The older SSL scheme is supported, but is now deprecated.
If any new-style properties are specified (those with the `ssl-` prefix),
then GemFire will not honor the older configuration,
and the entire app must migrate to the new scheme.

    The pre-GemFire 8.x SSL scheme, formerly deprecated, is now unsupported.

- All member discovery is through locators. Multicast communication can
no longer be used for discovery.

- UDP communications now use an Apache-compatible JGroups implementation,
and a revised, custom implementation of membership services eliminates
reliance on an implementation of JGroups that was not compatible with the
licensing requirements for Apache Geode (incubating).

- TomCat version 8 is now supported for HTTP session management.

- An adapter that allows GemFire to function as a drop-in replacement for
a Redis data store is available in an experimental implementation.
See [Experimental Features](../experimental/intro.html) to read about this
feature.

- OQL aggregate functions are available in an experimental implementation.
See [Experimental Features](../experimental/intro.html) to read about this
feature.

- An experimental implementation does a rebalance operation on a periodic
basis, basing a decision to do the rebalance on a minimum quantity of
bytes that would be transferred and/or on the ratio of the bytes that
would be transferred to the total number of bytes stored.
See [Experimental Features](../experimental/intro.html) to read about this
automated rebalance feature.

- An experimental implementation allows the creation of Apache Lucene indexes
on data stored in GemFire.

## <a id="topic_InstallingGF900" class="no-quick-link"></a>Installing Pivotal GemFire 9.0.0

Contact your Pivotal representative for installation assistance with this
Pivotal GemFire 9.0.0-beta.1 version.

<!--    take comment out for not-beta.1 installation
You can download Pivotal GemFire 9.0.0 from the [Pivotal GemFire product download](https://network.pivotal.io/products/pivotal-gemfire) page.

Pivotal GemFire 9.0.0 is available as:

-   ZIP or tar.gz file
-   Homebrew for MacOSX
-   Maven repository

Pivotal GemFire 8.2.0 installation download includes GemFire tools such as Pulse, VSD, Developer REST APIs, and Pivotal GemFire HTTP Modules.

**Note:**
If you are deploying Pivotal GemFire into an OSGi environment, GemFire requires that you use Apache Felix v4.4.1 and that you deploy `log4j-api-2.1.jar` and `log4j-core-2.1.jar` files to your OSGi environment.

For details on how to install Pivotal GemFire 8.2.0, see [Installing Pivotal GemFire](../getting_started/installation/install_intro.html) in the *Pivotal GemFire User's Guide*.
-->

## <a id="UpgradingGF900" class="no-quick-link"></a>Upgrading to Pivotal GemFire 9.0.0

To upgrade from an earlier version of GemFire to the current version, see [Upgrading Pivotal GemFire](../getting_started/upgrade/upgrade_from_overview.html#concept_0129F6A1D0EB42C4A3D24861AF2C5425).

The following are some upgrade considerations specific to upgrading to Pivotal GemFire 8.2.0:

-   Pivotal GemFire 8.2 requires Java SE 1.7 or 1.8, and no longer supports Java SE 1.6. You may need to upgrade your Java distribution on your target upgrade machines before you upgrade to GemFire 8.2.
-   Rolling upgrades to Pivotal GemFire 9.0.0 from earlier versions are not
supported.
-   If you are upgrading your applications to use the most recent Pivotal GemFire, make sure you copy `log4j-api-2.1.jar` and `log4j-core-2.1.jar` files to your application's CLASSPATH in addition to `gemfire.jar`. These log JAR files are required to run Pivotal GemFire 8.2.
-   Thoroughly test your systems with the new 8.2.0 version before moving into production. Downgrade from 8.2.0 to a previous version of GemFire is not supported.

## <a id="topic_vm4_qg5_v4" class="no-quick-link"></a>Resolved Issues

The following issues have been resolved in GemFire 9.0.0:

-   **GEODE-106/GEM-978**: Fixed a bug which could have resulted in an
`IndexMaintenanceException` while doing an invalidate operation
due to a race condition between the setting of the size of an array
and an iterator over that array.

-   **GEODE-478/GEM-716**: Message size is restricted to 1 GB to avoid
overflow when specifying the length of a message.

-   **GEODE-695/GEM-732**: Modified the exported cluster configuration file
name to avoid using colons in the file name, as needed to support
Windows file name restrictions.

-   **GEODE-745/GEM-757**: Properly include the `include-locators` parameter
in the shutdown command invoked through the REST API.

-   **GEODE-980**: Fixed a bug that prevented a region destroy operation
on Mac OS X platforms when the local host name was not tied to
the local IP address.

-   **GEODE-1236/GEODE-1248**: Fixed a bug in which a `gfsh shutdown` call
may have resulted in JVMs 
exiting prematurely and not completing the full shut down process.
In such a case, other systems would have viewed the affected system
as having crashed.
If network partition detection was active,
it might have resulted in a split-brain scenario.

-   **GEODE-1329/GEM-625**: Fixed a bug that caused a reconnecting member
to receive a second forced disconnect while creating the cache.

-   **GEODE-1347/GEM-642**: Fixed two `gfsh` issues.
An echo of the `gfsh connect` command no longer echos clear text
for a password.
And, a `gfsh history --clear` now also clears the history on file. 

-   **GEODE-1349/GEM-606**: Fixed a bug that caused clients to throw a
`java.lang.InternalError: MemoryPool not found` exception.

-   **GEODE-1387/GEM-809**: Fixed a race condition that manifested as a
write-after-read error on the locator status file when reading the status
or starting a server.

-   **GEODE-1393/GEM-659**: Fixed a bug which manifested as clients not 
finding servers from the locator after the locator reconnects to the
distributed system.

-   **GEODE-1469/GEM-712**: Corrected state information prevents an error
that caused multi-page HTTP output to generate an exception.

-   **GEODE-1495/GEM-715**: Fixed a bug in which a CQEvent was not getting 
properly generated after a destroy operation on a partioned region.
The fix removes the cached, destroyed token/events from the CQ.

-   **GEODE-1610/GEM-794**: A bug fix modifies an initial event value to
use the same event id in both primary and secondary queues.

-   **GEODE-1615**: Fixed a bug that manifested as `gfsh` being unable to
destroy a region that has a hyphen in its name.

-   **GEODE-1644/GEM-792**: In queries against a map index no longer
incorrectly throw a `ClassCastException`.

-   **GEODE-1676/GEM-838**: Fixed query bugs in which multiple
not equals together with a compact range index returned incorrect results.

-   **GEODE-1718/GEM-896**: Fixed a bug in which the `Region.replace` method
incorrectly returned false when it should have returned true. 
Or, it may have failed with a null pointer exception.
The bug manifested itself when an entry being replaced is on disk,
either because it was overflowed to disk or because it was not yet
initialized from disk.

-   **GEODE-1800/GEM-921**: Fixed the cause of a `ParallelGatewaySenderQueue`
race condition.

-   **GEODE-1830/GEM-938**: Fixed a bug that caused client `CacheListener`
methods to incorrectly receive a tombstone marker for a destroyed
region entry. 

-   **GEODE-1834/GEM-877**: The `gfsecurity.properties` file may now be
renamed or moved to a different location,
and the correct SSL settings will be used. 

-   **GEODE-1840/GEM-952**: Fixed a bug in which predicates of queries
lost their operator type.

-   **GEODE-1862/GEM-909**: Fixed a bug that manifested itself as 
a request to list durable continuous queries returning an empty string.

-   **GEODE-1864/GEM-968**: Fixed a bug that manifested itself as 
incorrect maintenance of an index when a map key no longer exists.

-   **GEM-845**: Region attribute `multicastEnabled` is now properly honored
for region operation communications.

-   **GEM-961**: A function no longer gets executed twice on gateway
receivers when groups are also configured. 

