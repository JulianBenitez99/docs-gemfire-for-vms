<a id="section_52B7F6AE63AE46F59F0B3624328635FC"></a>

# Operating System Statistics - Solaris

## Solaris Process Statistics (SolarisProcessStats)

Operating system statistics on the member process. These can be used to determine the member’s CPU, memory, and disk usage. Operating system statistics are not available in pure Java mode, where <span class="keyword">GemFire</span> runs without the use of the <span class="keyword">GemFire</span> native library. For the Solaris operating system, when not using pure-java mode, these statistics are gathered for every process. The primary statistics are:

| Statistic              | Description                                                                                                                                                                                                                      |
|------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `activeTime`           | The amount of time, in milliseconds, the process has been using the CPU to execute user or system code.                                                                                                                          |
| `allOtherSleepTime`    | The number of milliseconds the process has been sleeping for some reason not tracked by any other stat. Note, all lightweight processes (lwps) contribute to this stat's value, so check lwpCurCount to understand large values. |
| `characterIo`          | The number of characters read and written.                                                                                                                                                                                       |
| `cpuUsed`              | The percentage of recent CPU time used by the process.                                                                                                                                                                           |
| `dataFaultSleepTime`   | The number of milliseconds the process has been faulting in data pages.                                                                                                                                                          |
| `heapSize`             | The size, in megabytes, of the process's heap.                                                                                                                                                                                   |
| `imageSize`            | The size, in megabytes, of the process's image.                                                                                                                                                                                  |
| `involContextSwitches` | The number of times the process operation was forced to do a context switch.                                                                                                                                                     |
| `kernelFaultSleepTime` | The number of milliseconds the process has been faulting in kernel pages.                                                                                                                                                        |
| `lockWaitSleepTime`    | The number of milliseconds the process has been waiting for a user lock. Note, all lwp's contribute to this stat's value, so check lwpCurCount to understand large values.                                                       |
| `lwpCurCount`          | The current number of lightweight process threads that exist in the process.                                                                                                                                                     |
| `lwpTotalCount`        | The total number of lightweight process threads that have ever contributed to the process's statistics.                                                                                                                          |
| `majorFaults`          | The number of times the process operation has had a page fault that needed disk access.                                                                                                                                          |
| `memoryUsed`           | The percentage of real memory used by the process.                                                                                                                                                                               |
| `messagesRecv`         | The number of messages received by the process.                                                                                                                                                                                  |
| `messagesSent`         | The number of messages sent by the process.                                                                                                                                                                                      |
| `minorFaults`          | The number of times the process operation has had a page fault that did not need disk access.                                                                                                                                    |
| `rssSize`              | The size, in megabytes of the process's resident set size.                                                                                                                                                                       |
| `signalsReceived`      | The total number of operating system signals this process has received.                                                                                                                                                          |
| `stackSize`            | The size, in megabytes, of the process's stack.                                                                                                                                                                                  |
| `stoppedTime`          | The amount of time, in milliseconds, the process has been stopped.                                                                                                                                                               |
| `systemCalls`          | The total number system call operations done by this process.                                                                                                                                                                    |
| `systemTime`           | The amount it time, in milliseconds, the process has been using the CPU to execute system calls.                                                                                                                                 |
| `textFaultSleepTime`   | The amount of time, in milliseconds, the process has been faulting in text pages.                                                                                                                                                |
| `trapTime`             | The amount of time, in milliseconds, the process has been in system traps.                                                                                                                                                       |
| `userTime`             | The amount of time, in milliseconds, the process has been using the CPU to execute user code.                                                                                                                                    |
| `volContextSwitches`   | The number of voluntary context switch operations done by the process.                                                                                                                                                           |
| `waitCpuTime`          | The amount of time, in milliseconds, the process has been waiting for a CPU due to latency.                                                                                                                                      |

## Solaris System (SolarisSystemStats)

Operating system statistics on the member’s machine. These can be used to determine total cpu, memory, and disk usage on the machine. Operating system statistics are not available in pure Java mode. These statistics are recorded for the machine on which the program is running when not using pure Java and running on Solaris. The primary statistics are:

| Statistic                 | Description                                                                                                                                                                                                                                                                                                                                   |
|---------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `allocatedSwap`           | The number of megabytes of swap space that have actually been written to. Swap space must be reserved before it can be allocated.                                                                                                                                                                                                             |
| `anonymousPagesFreed`     | The total number pages that contain heap, stack, or other changeable data that have been removed from memory and added to the free list.                                                                                                                                                                                                      |
| `anonymousPagesPagedIn`   | The total number pages that contain heap, stack, or other changeable data that have been allocated in memory and possibly copied from disk.                                                                                                                                                                                                   |
| `anonymousPagesPagedOut`  | The total number pages that contain heap, stack, or other changeable data that have been removed from memory and copied to disk.                                                                                                                                                                                                              |
| `broadcastInputPackets`   | Broadcast packets received.                                                                                                                                                                                                                                                                                                                   |
| `broadcastOutputPackets`  | Broadcast packets requested to be sent.                                                                                                                                                                                                                                                                                                       |
| `collisions`              | Solaris collisions.                                                                                                                                                                                                                                                                                                                           |
| `contextSwitches`         | The total number of context switches from one thread to another on the computer. Thread switches can occur either inside of a single process or across processes. A thread switch may be caused either by one thread asking another for information, or by a thread being preempted by another, higher priority thread becoming ready to run. |
| `cpuActive`               | The percentage of the total available time that has been used to execute user or system code.                                                                                                                                                                                                                                                 |
| `cpuIdle`                 | The percentage of the total available time that has been spent sleeping.                                                                                                                                                                                                                                                                      |
| `cpuIoWait`               | The percentage of the total available time that has been spent waiting for disk IO to complete.                                                                                                                                                                                                                                               |
| `cpus`                    | The number of online CPUs on the local machine.                                                                                                                                                                                                                                                                                               |
| `cpuSwapWait`             | The percentage of the total available time that has been spent waiting for paging and swapping to complete.                                                                                                                                                                                                                                   |
| `cpuSystem`               | The percentage of the total available time that has been used to execute system (that is, kernel) code.                                                                                                                                                                                                                                       |
| `cpuUser`                 | The percentage of the total available time that has been used to execute user code.                                                                                                                                                                                                                                                           |
| `cpuWaiting`              | The percentage of the total available time that has been spent waiting for IO, paging, or swapping.                                                                                                                                                                                                                                           |
| `execPagesFreed`          | The total number read only pages that contain code or data that have been removed from memory and returned to the free list.                                                                                                                                                                                                                  |
| `execPagesPagedIn`        | The total number read only pages that contain code or data that have been copied from disk to memory.                                                                                                                                                                                                                                         |
| `execPagesPagedOut`       | The total number read only pages that contain code or data that have been removed from memory and will need to be paged in when used again.                                                                                                                                                                                                   |
| `failedMutexEnters`       | The total number of times a thread entering a mutex had to wait for the mutex to be unlocked.                                                                                                                                                                                                                                                 |
| `failedReaderLocks`       | The total number of times readers failed to obtain a readers/writer locks on their first try. When this happens the reader must wait for the current writer to release the lock.                                                                                                                                                              |
| `failedWriterLocks`       | The total number of times writers failed to obtain a readers/writer locks on their first try. When this happens the writer must wait for all the current readers or the single writer to release the lock.                                                                                                                                    |
| `fileSystemPagesFreed`    | The total number of pages, that contained the contents of a file due to the file being read from a file system, that have been removed from memory and put on the free list.                                                                                                                                                                  |
| `fileSystemPagesPagedIn`  | The total number of pages that contain the contents of a file due to the file being read from a file system.                                                                                                                                                                                                                                  |
| `fileSystemPagesPagedOut` | The total number of pages, that contained the contents of a file due to the file being read from a file system, that have been removed from memory and copied to disk.                                                                                                                                                                        |
| `freeMemory`              | The number of megabytes of unused memory on the machine.                                                                                                                                                                                                                                                                                      |
| `hatMinorFaults`          | The total number of hat faults. You only get these on systems with software memory management units.                                                                                                                                                                                                                                          |
| `inputBytes`              | Octets received.                                                                                                                                                                                                                                                                                                                              |
| `inputErrors`             | Input errors.                                                                                                                                                                                                                                                                                                                                 |
| `inputPackets`            | Packets received.                                                                                                                                                                                                                                                                                                                             |
| `inputPacketsDiscarded`   | Number of received packets discarded.                                                                                                                                                                                                                                                                                                         |
| `interrupts`              | The total number of interrupts that have occurred on the computer.                                                                                                                                                                                                                                                                            |
| `involContextSwitches`    | The total number of times a thread was forced to give up the CPU even though it was still ready to run.                                                                                                                                                                                                                                       |
| `loadAverage1`            | The average number of threads ready to run over the last minute.                                                                                                                                                                                                                                                                              |
| `loadAverage15`           | The average number of threads ready to run over the last 15 minutes.                                                                                                                                                                                                                                                                          |
| `loadAverage5`            | The average number of threads ready to run over the last five minute.                                                                                                                                                                                                                                                                         |
| `loopbackInputPackets`    | The total number of input packets received over the loopback network adaptor.                                                                                                                                                                                                                                                                 |
| `loopbackOutputPackets`   | The total number of output packets sent over the loopback network adaptor.                                                                                                                                                                                                                                                                    |
| `majorPageFaults`         | The total number of times a page fault required disk IO to get the page.                                                                                                                                                                                                                                                                      |
| `messageCount`            | The total number of msgrcv and msgsnd system calls.                                                                                                                                                                                                                                                                                           |
| `multicastInputPackets`   | Multicast packets received.                                                                                                                                                                                                                                                                                                                   |
| `multicastOutputPackets`  | Multicast packets requested to be sent.                                                                                                                                                                                                                                                                                                       |
| `outputBytes`             | Octats transmitted.                                                                                                                                                                                                                                                                                                                           |
| `outputErrors`            | Output errors.                                                                                                                                                                                                                                                                                                                                |
| `outputPackets`           | Solaris out packets.                                                                                                                                                                                                                                                                                                                          |
| `outputPacketsDiscarded`  | Packets that could not be sent up because the queue was flow controlled.                                                                                                                                                                                                                                                                      |
| `pageDaemonCycles`        | The total number of revolutions of the page daemon's scan "clock hand".                                                                                                                                                                                                                                                                       |
| `pageIns`                 | The total number of times pages have been brought into memory from disk by the operating system's memory manager.                                                                                                                                                                                                                             |
| `pageOuts`                | The total number of times pages have been flushed from memory to disk by the operating system's memory manager.                                                                                                                                                                                                                               |
| `pagerRuns`               | The total number of times the pager daemon has been scheduled to run.                                                                                                                                                                                                                                                                         |
| `pagesPagedIn`            | The total number of pages that have been brought into memory from disk by the operating system's memory manager.                                                                                                                                                                                                                              |
| `pagesPagedOut`           | The total number of pages that have been flushed from memory to disk by the operating system's memory manager.                                                                                                                                                                                                                                |
| `pagesScanned`            | The total number pages examined by the pageout daemon. When the amount of free memory gets below a certain size, the daemon starts to look for inactive memory pages to steal from processes. A high scan rate is a good indication of needing more memory.                                                                                   |
| `physicalMemory`          | The actual amount of total physical memory on the machine.                                                                                                                                                                                                                                                                                    |
| `processes`               | The number of processes in the computer at the time of data collection. Notice, this is an instantaneous count, not an average over the time interval. Each process represents the running of a program                                                                                                                                       |
| `procsInIoWait`           | The number of processes waiting for block I/O at this instant in time.                                                                                                                                                                                                                                                                        |
| `protectionFaults`        | The total number of times memory has been accessed in a way that was not allowed. This results in a segmentation violation and in most cases a core dump.                                                                                                                                                                                     |
| `reservedSwap`            | The number of megabytes of swap space reserved for allocation by a particular process.                                                                                                                                                                                                                                                        |
| `schedulerRunCount`       | The total number of times the system scheduler has put a thread in its run queue.                                                                                                                                                                                                                                                             |
| `schedulerSwapCount`      | The total number of times the system scheduler has swapped out an idle process.                                                                                                                                                                                                                                                               |
| `schedulerWaitCount`      | The total number of times the system scheduler has removed a thread from the run queue because it was waiting for a resource.                                                                                                                                                                                                                 |
| `semphoreOps`             | The total number of semaphore operations.                                                                                                                                                                                                                                                                                                     |
| `softwareLockFaults`      | The total number of fault operations caused by software locks held on memory pages.                                                                                                                                                                                                                                                           |
| `systemCalls`             | The total number of fault operations caused by software locks held on memory pages.                                                                                                                                                                                                                                                           |
| `systemMinorFaults`       | The total number of minor page fault operations in kernel code. Minor page faults do not require disk access.                                                                                                                                                                                                                                 |
| `threadCreates`           | The total number of times a thread operation has been created.                                                                                                                                                                                                                                                                                |
| `traps`                   | The total number of trap operations that have occurred on the computer.                                                                                                                                                                                                                                                                       |
| `unallocatedSwap`         | The number of megabytes of swap space that have not been allocated.                                                                                                                                                                                                                                                                           |
| `unreservedSwap`          | The number of megabytes of swap space that are free. If this value goes to zero new processes can no longer be created.                                                                                                                                                                                                                       |
| `userMinorFaults`         | The total number of minor page fault operations in non-kernel code. Minor page faults do not require disk access.                                                                                                                                                                                                                             |

<a id="section_ABD68573C55E4CAEBE29C5EAE838B5A3"></a>

## Operating System Statistics - Windows

## Windows Process Stats (WindowsProcessStats)

Operating system statistics on the member process. These can be used to determine the member’s CPU, memory, and disk usage. Operating system statistics are not available in pure Java mode, where <span class="keyword">GemFire</span> runs without the use of the <span class="keyword">GemFire</span> native library. These are the equivalent of SolarisProcessStats when running on Windows. The primary statistics are:

| Statistic            | Description|
|----------------------||
| `activeTime`         | The elapsed time, in milliseconds, that all of the threads of this process used the processor to execute instructions. An instruction is the basic unit of execution in a computer, a thread is the object that executes instructions, and a process is the object created when a program is run. Code executed to handle some hardware interrupts and trap conditions are included in this count.                                                                                                                                                                                                                                                                                                                                                                                                       |
| `handles`            | The total number of handle items currently open by this process. This number is the sum of the handles currently open by each thread in this process.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |
| `pageFaults`         | The total number of page fault operations by the threads executing in this process. A page fault occurs when a thread refers to a virtual memory page that is not in its working set in main memory. This will not cause the page to be fetched from disk if it is on the standby list and hence already in main memory, or if it is in use by another process with whom the page is shared.                                                                                                                                                                                                                                                                                                                                                                                                             |
| `pageFileSize`       | The current number of bytes this process has used in the paging file(s). Paging files are used to store pages of memory used by the process that are not contained in other files. Paging files are shared by all processes, and lack of space in paging files can prevent other processes from allocating memory.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |
| `pageFileSizePeak`   | The maximum number of bytes this process has used in the paging file(s). Paging files are used to store pages of memory used by the process that are not contained in other files. Paging files are shared by all processes, and lack of space in paging files can prevent other processes from allocating memory.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |
| `priorityBase`       | The current base priority of the process. Threads within a process can raise and lower their own base priority relative to the process's base priority|
| `privateSize`        | The current number of bytes this process has allocated that cannot be shared with other processes|
| `systemTime`         | The elapsed time, in milliseconds, that the threads of the process have spent executing code in privileged mode. When a Windows system service is called, the service will often run in Privileged Mode to gain access to system-private data. Such data is protected from access by threads executing in user mode. Calls to the system can be explicit or implicit, such as page faults or interrupts. Unlike some early operating systems, Windows uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes. These subsystem processes provide additional protection. Therefore, some work done by Windows on behalf of your application might appear in other subsystem processes in addition to the privileged time in your process. |
| `threads`            | Number of threads currently active in this process. An instruction is the basic unit of execution in a processor, and a thread is the object that executes instructions. Every running process has at least one thread|
| `userTime`           | The elapsed time, in milliseconds, that this process's threads have spent executing code in user mode. Applications, environment subsystems, and integral subsystems execute in user mode. Code executing in User Mode cannot damage the integrity of the Windows Executive, Kernel, and device drivers. Unlike some early operating systems, Windows uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes. These subsystem processes provide additional protection. Therefore, some work done by Windows on behalf of your application might appear in other subsystem processes in addition to the privileged time in your process.                                                                                                 |
| `virtualSize`        | Virtual Bytes is the current size in bytes of the virtual address space the process is using. Use of virtual address space does not necessarily imply corresponding use of either disk or main memory pages. Virtual space is finite, and by using too much, the process can limit its ability to load libraries.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |
| `virtualSizePeak`    | The maximum number of bytes of virtual address space the process has used at any one time. Use of virtual address space does not necessarily imply corresponding use of either disk or main memory pages. Virtual space is however finite, and by using too much, the process might limit its ability to load libraries.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |
| `workingSetSize`     | The current number of bytes in the Working Set of this process. The Working Set is the set of memory pages touched recently by the threads in the process. If free memory in the computer is above a threshold, pages are left in the Working Set of a process even if they are not in use. When free memory falls below a threshold, pages are trimmed from Working Sets. If they are needed they will then be soft-faulted back into the Working Set before they are paged out to disk.                                                                                                                                                                                                                                                                                                                |
| `workingSetSizePeak` | The maximum number of bytes in the Working Set of this process at any point in time. The Working Set is the set of memory pages touched recently by the threads in the process. If free memory in the computer is above a threshold, pages are left in the Working Set of a process even if they are not in use. When free memory falls below a threshold, pages are trimmed from Working Sets. If they are needed they will then be soft-faulted back into the Working Set before they leave main memory.                                                                                                                                                                                                                                                                                               |


