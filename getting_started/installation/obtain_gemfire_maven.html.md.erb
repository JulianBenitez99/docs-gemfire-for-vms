---
title:  Obtaining Pivotal GemFire from a Maven Repository
---

You can use Maven to add Pivotal GemFire to your Java project build.

1. Access to the Pivotal Commercial Maven Repository requires a one-time
registration step to obtain an account.
The URL for both registration and subsequent logins after registration is
[https://commercial-repo.pivotal.io/login/auth](https://commercial-repo.pivotal.io/login/auth).
Click on the Create Account link to bring up a page
on which you will specify required email and password fields,
as well as read and agree to an End User License Agreement,
and then click on the Submit button.
A confirmation email will be sent; follow the directions in this email
to activate your account.

1.  After account activation, log in at
[https://commercial-repo.pivotal.io/login/auth](https://commercial-repo.pivotal.io/login/auth)
to access the configuration information in the Pivotal GemFire Release
Repository.

1.  To add GemFire to your Java project,
you need to modify your project's `pom.xml` file.
Add the following repository definition to your `pom.xml` file:

    ``` pre
       <repository>
           <id>gemfire-release-repo</id>
           <name>Pivotal GemFire Release Repository</name>
           <url>https://commercial-repo.pivotal.io/data3/gemfire-release-repo/gemfire</url>
       </repository>
    ```

2.  Add the following dependencies to your `pom.xml` file:

    ``` pre
    <dependencies>
       <dependency>
          <groupId>io.pivotal.gemfire</groupId>
          <artifactId>geode-core</artifactId>
          <version>VERSION-ID</version>
       </dependency>
       <dependency>
          <groupId>io.pivotal.gemfire</groupId>
          <artifactId>geode-wan</artifactId>
          <version>VERSION-ID</version>
       </dependency>
       <dependency>
          <groupId>io.pivotal.gemfire</groupId>
          <artifactId>geode-cq</artifactId>
          <version>VERSION-ID</version>
       </dependency>
    </dependencies>
    ```

    where _VERSION-ID_ is the version identifier of GemFire that you wish to install. For example, **9.0.0**.

3.  To access these artifacts, you must add an entry to your `.m2/settings.xml` file:

    ``` pre
       <settings>
           <servers>
               <server>
                   <id>gemfire-release-repo</id>
                   <username>MY-USERNAME@example.com</username>
                   <password>MY-DECRYPTED-PASSWORD</password>
               </server>
           </servers>
       </settings>
    ```

where you provide the values for `MY-USERNAME@example.com`
and `MY-DECRYPTED-PASSWORD`.
As of Maven version 2.1.0,
encrypted passwords are supported in this `settings.xml` file.
See [https://maven.apache.org/guides/mini/guide-encryption.html](https://maven.apache.org/guides/mini/guide-encryption.html) for details on the encryption. 

