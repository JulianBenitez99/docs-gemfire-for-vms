---
title:  Obtaining Pivotal GemFire from a Maven Repository
---

You can use Maven to add Pivotal GemFire to your Java project build.

To add GemFire to your Java project, you need to modify your project's `pom.xml` file.

1.  Add the following repository definition to your `pom.xml` file:

    ``` pre
       <repository>
           <id>gemfire-release-repo</id>
           <name>Pivotal GemFire Release Repository</name>
           <url>https://commercial-repo.pivotal.io/data3/gemfire-release-repo/gemfire</url>
       </repository>
    ```

2.  Add the following dependency to your `pom.xml` file:

    ``` pre
    <dependencies>
       <dependency>
          <groupId>com.gemstone.gemfire</groupId>
          <artifactId>gemfire</artifactId>
          <version>VERSION-ID</version>
       </dependency>
    </dependencies>
    ```

    where _VERSION-ID_ is the version identifier of GemFire that you wish to install. For example, **8.2.0**.

3.  To access these artifacts, you must add an entry to your `.m2/settings.xml` file:

    ``` pre
       <settings>
           <servers>
               <server>
                   <id>gemfire-release-repo</id>
                   <username>MY-USERNAME@pivotal.io</username>
                   <password>MY-DECRIPTED-PASSWORD</password>
               </server>
           </servers>
       </settings>
    ```

Where you provide the values for _MY-USERNAME_ and _MY-DECRIPTED-PASSWORD_.

**Note:**
You can also obtain Spring Data GemFire using Maven. See [http://projects.spring.io/spring-data-gemfire](http://projects.spring.io/spring-data-gemfire) for instructions. The Spring Data GemFire distribution includes a `gemfire.jar` file; however, this JAR only includes the GemFire Java API and is not a full installation of GemFire.
