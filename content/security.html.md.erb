---
title: Security
---

The security measures implemented for a <%=vars.app_runtime_full%> (<%=vars.app_runtime_abbr%>) foundation and
for <%=vars.product_full%> service instances within that foundation attempt to
reduce harm from agents with foundation access.
See [Cloud Foundry Security](https://docs.pivotal.io/pivotalcf/concepts/security.html)
for a general presentation on <%=vars.app_runtime_abbr%> security.
Transport-Layer Security (TLS) encryption prevents easy access to communication between
components,
and role-based authentication and authorization limits access
to data.

### TLS Encryption for the <%=vars.product_short%> Service Instance

Without TLS encryption with and within the <%=vars.product_short%> service instance,
the diagram below identifies via green dotted-and-dashed lines the unencrypted, plaintext communication that a bad agent with <%=vars.app_runtime_abbr%> foundation access could listen to without TLS encryption.

![<%=vars.app_runtime_abbr%> foundation without TLS encryption](Security-Overview-Without-TLS.png)


Each of these unencrypted communication paths may be TLS-encrypted.
To encrypt these communications,
follow the directions in [Migrating to a TLS-Enabled Cluster](migrate-to-TLS.html)
and ensure that apps also use TLS as described in
[Developing an App Under TLS](tls-enabled-app.html).
Enabling TLS encryption implements a one-way authentication of
apps, verifying the identity of cluster members.


You must also secure gfsh communication. Follow directions in
[Connect with gfsh over HTTPS](accessing-instance.html#gfsh-connect-https).

### Networking

To allow app access to the PCC network, create application security groups.
Allow access on the following ports:

* 1099
* 8080
* 40404
* 55221

For more information, see <%=vars.app_runtime_abbr%> documentation on [Restricting App Access to Internal PAS Components](https://docs.pivotal.io/platform/application-service/operating/app-sec-groups.html).

<%=vars.product_short%> works with the IPsec Add-on for <%=vars.app_runtime_abbr%> (see [Securing Data in Transit with the IPsec Add-on](https://docs.pivotal.io/addon-ipsec/index.html)).

### Security within the <%=vars.component_product%> Cluster

The <%=vars.component_product%> cluster within a <%=vars.product_short%> service instance implements
role-based authentication
and authorizes cluster operations based upon the roles.

There are two sets of roles:

- One set has four roles for users that integrate
an authentication and enterprise single-sign-on (SSO)
system, such as LDAP.
See [Configuring UAA Roles](UAA-config.html) for a description of
the roles and the configuration that completes the integration.

- The other set of roles defaults when there is no
authentication and enterprise SSO system
integrated during the <%=vars.product_short%> tile installation.
The identifiers assigned for these roles are detailed in
[Create Service Keys](accessing-instance.html#create-service-key).
<%=vars.product_short%> service instances are created with three default <%=vars.component_product%> user roles for
interacting with clusters:

    - **Cluster operator:** manages the <%=vars.component_product%> cluster and can access
    region data. Has the permissions `CLUSTER:MANAGE`, `CLUSTER:WRITE`, `CLUSTER:READ`, `DATA:MANAGE`, `DATA:WRITE`, and `DATA:READ`.
    - **Developer:** can access region data. Has the permissions `CLUSTER:READ`, `DATA:WRITE`, and `DATA:READ`.
    - **Gateway sender:** propagates region data to another <%=vars.product_short%> service instance. Has the permission `DATA:WRITE`.

Which set is used for a <%=vars.product_short%> service instance depends on the
options chosen during <%=vars.product_short%> tile installation.

All gfsh and JMX clients must authenticate as
one of these user roles to access the cluster.
To authorize operations,
each user role is given predefined permissions for cluster operations.
To accomplish a cluster operation,
the user authenticates using one of the roles.
Prior to initiating the requested operation,
there is a verification that the
authenticated user role has permission to do the operation.
Read more about these permissions in [Implementing Authorization](http://gemfire.docs.pivotal.io/latest/geode/managing/security/implementing_authorization.html).
