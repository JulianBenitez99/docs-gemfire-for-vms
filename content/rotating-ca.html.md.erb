---
title: Managing Certificates
---

This topic describes how to check expiration dates and rotate CA certificates used by PCC for TLS communication and managed by the operator.

## <a id="overview"></a> Overview

When you installed PCC, you provided a CA certificate to BOSH CredHub
when you followed the procedures in [Preparing for TLS](prepare-TLS.html).
You must manually rotate this CA certificate before the certificate expires or if it is compromised.

You must be running a version of PCC that supports certificate rotation. 
Find your PCC version in the table below. You must be running the minimum patch version or later to perform CA certificate rotation.

| PCC version<br>(Major.Minor)  | Minimum patch version<br>that supports CA rotation |
|--------------|---------------------------|
| 1.9          | 1.9.0 |
| 1.8          | 1.8.2 |
| 1.7          | 1.7.2 |
| 1.6          | 1.6.4 |

To manually rotate certificates:

1. [Access BOSH CredHub](#credhub)
1. [Check Expiration Dates](#check)
1. [Rotate Certificates Manually](#tls)

<p class="note warning"><strong>Warning</strong>: Do not attempt to rotate a CA certificate on your own.
Contact <a href="https://support.pivotal.io">Pivotal Support</a>
and perform the following procedures with their help.</p>

### <a id="pcc-certs"></a> PCC Certificates

PCC uses the following certificates:

- **/services/tls_ca**: CredHub CA that signs certificates for every PCC service instance
- **/p-bosh/service-instance_GUID/gemfire-locator-certificate**
- **/p-bosh/service-instance_GUID/gemfire-server-certificate**

where `GUID` is the name of the service instance GUID. When rotating certificates for PCC, the
operator needs to rotate only `/services/tls_ca` as described below. The errand
`update-all-service-instances` will regenerate all certificates for service instances.


## <a id="credhub"></a> Access BOSH CredHub

Pivotal Cloud Foundry (PCF) stores some of its internal CA and non-CA certificates in the BOSH
CredHub credentials store.  For more information, see [BOSH CredHub](https://docs.pivotal.io/pivotalcf/credhub/#bosh).

To access the BOSH CredHub credentials store, you must retrieve credentials from BOSH Director
and then use the credentials to log in to CredHub from the Ops Manager VM.


To access the BOSH CredHub:

1. If the CredHub CLI is not installed on your local machine, install the CredHub CLI by following the
instructions in [credhub-cli](https://github.com/cloudfoundry-incubator/credhub-cli) on GitHub.

1. In the Ops Manager Installation Dashboard, click the **BOSH Director** tile.

1. Click the **Credentials** tab.

1. In the **BOSH Director** section, click the link to the **BOSH Commandline Credentials**.
![CredHub Credentials](credhub-creds.png)

1. Record the values for `BOSH_CLIENT` and `BOSH_CLIENT_SECRET`.<br>
  For example:

    ```
    {"credential":"BOSH_CLIENT=ops_manager
    BOSH_CLIENT_SECRET=abCdE1FgHIjkL2m3n-3PqrsT4EUVwXy5
    BOSH_CA_CERT=/var/tempest/workspaces/default/root_ca_certificate
    BOSH_ENVIRONMENT=10.0.0.5 bosh "}
    ```
  The `BOSH_CLIENT` is the BOSH CredHub client name and the `BOSH_CLIENT_SECRET` is
  the BOSH CredHub client secret.

1. Record the information needed to log in to the BOSH Director VM by following the procedure in
[Gather Credential and IP Address Information](https://docs.pivotal.io/pivotalcf/2-4/customizing/trouble-advanced.html#gather).

1. Log in to the Ops Manager VM by following the procedure in
[Log in to the Ops Manager VM with SSH](https://docs.pivotal.io/pivotalcf/2-4/customizing/trouble-advanced.html#ssh).

1. From the Ops Manager VM, set the API target of the CredHub CLI to your BOSH
CredHub server by running the following command:

    ```
    credhub api https://BOSH-DIRECTOR:8844 --ca-cert=/var/tempest/workspaces/default/root_ca_certificate
    ```
  where `BOSH-DIRECTOR` is the IP address of the BOSH Director VM you recorded above.
  <br><br>
  For example:
  <pre class="terminal">
  $ credhub api http<span>s:</span>//10.0.0.5:8844 \
      --ca-cert=/var/tempest/workspaces/default/root\_ca\_certificate
  </pre>

1. Log in to CredHub by running the following command:

    ```
    credhub login --client-name=CREDHUB-CLIENT-NAME --client-secret=CREDHUB-CLIENT-SECRET
    ```
    Where:<br>
    * `CREDHUB-CLIENT-NAME` is the value you recorded for `BOSH_CLIENT` earlier
    in this procedure.
    * `CREDHUB-CLIENT-SECRET` is the value you recorded for `BOSH_CLIENT_SECRET`
    earlier in this procedure.

    For example:
    <pre class="terminal">
    $ credhub login \
    --client-name=credhub \
    --client-secret=abcdefghijklm123456789
    </pre>

## <a id="check"></a> Check Expiration Dates

You can check the expiration date for TLS and internal certificates.

To check certificate expiration dates:

1. Log in to CredHub by following the procedure in [Access BOSH CredHub](#credhub) above.

1. Run the following command:

    ```
    credhub get -n CERTIFICATE-NAME -j | jq -r .value.ca | openssl x509 -text -noout | grep -A 2 "Validity"
    ```
    where `CERTIFICATE-NAME` is the name of the certificate you are checking.<br /><br>
    For example:
    <pre class="terminal">
    $ credhub get -n /services/tls_ca -j | jq -r .value.ca | \
        openssl x509 -text -noout | grep -A 2 "Validity"
    Validity
              Not Before: Jan 23 19:04:58 2019 GMT
              Not After : Jan 23 19:04:58 2020 GMT
    </pre>

    The above command retrieves the certificate from CredHub, parses its JSON structure,
    decrypts it, and finds its `Validity` properties.
    The expiration date for the certificate is the value of `Not After`.<br><br>


##<a id='tls'></a> Rotate TLS CA Certificates Manually

<p class="note warning"><strong>Warning</strong>: This procedure assumes that you only use one foundation and do not have a WAN setup. 
For WAN setup, all apply steps will need to be for your entire WAN. Also, all cert steps will need to
include a SAN/CN.</p>

To manually rotate the TLS CA certificate:

1. [Obtain or Generate a New CA Certificate](#obtainorgenerate)
1. [Add New and Old Certificates to Ops Manager](#addnewandold)
1. [Apply Changes](#applychanges)
1. [Rebind Your Apps](#rebind)
1. [Set New CA Certificate to /services/tls_ca](#setnew)
1. [Remove the Old CA Certificate](#remove)
1. [Apply Changes](#applychanges2)
1. [Rebind Your Apps](#rebind2)

### <a id="obtainorgenerate"></a> Obtain or Generate a New CA Certificate

**If you have an existing certificate,** obtain the CA (certificate authority) that signs this
certificate. You will add this to the Ops Manager settings in the next step.

**If you use self-signed certificates,** generate a new self-signed certificate with a separate name
in CredHub. In this example we generate the new certificate with the name “/services/new_ca”:

<pre class="terminal">
$ credhub generate \
    --name="/services/new_ca" \
    --type="certificate" \
    --no-overwrite \
    --is-ca \
    --common-name="servicesCA"
</pre>

**If you use an intermediate certificate signed by a root CA in credhub,**
generate a new certificate signed by the CredHub root CA:

<pre class="terminal">
$ credhub generate \
    --name="/services/new_ca" \
    --type="certificate" \
    --no-overwrite \
    --is-ca \
    --common-name="servicesCA" \
    --ca=/path-to-root-ca
</pre>

### <a id="addnewandold"></a> Add New and Old Certificates to Ops Manager

To add new and old CA certificates to Ops Manager:

1. Log in to CredHub.
1. Obtain the current CA with `credhub get --name=/services/tls_ca -k ca`.
1. Obtain the new CA, either from a pre-existing file, or from your new CredHub location using `credhub get --name=/services/new_ca -k ca`.
1. Make sure both ca values are pasted into **Ops Manager -> BOSH Director -> Security -> Trusted Certificates**.
1. Click **Save**.


### <a id="applychanges"></a> Apply Changes

<p class="note warning"><strong>Warning</strong>: This procedure involves restarting
all of the VMs in your PCF deployment to apply a CA certificate. The
operation can take a long time to complete.</p>

To apply these changes, do the following:
 
1. Navigate back to the **Installation Dashboard**.
1. Click **Review Pending Changes**.
1. Click **ERRANDS on PCC**.
1. Select **Upgrade All Service Instances**. 
![Upgrade All Service Instances](upgrade-all-service-instances.png)
1. Click **Apply Changes**.

### <a id='rebind'></a> Rebind Your Apps

If your apps do not use the trusted store to validate server certificates, you
must re-bind apps to the service instance to receive the updated CA certificate.
Apps must be written in Spring to use the trusted store.

To re-bind your app:

1. Stop your app by running the following command:

	```
	cf stop YOUR-APP
	```
	Where `YOUR-APP` is the name of your app.

1. Unbind your app from the service instance by running the following command:

	```
	cf unbind-service YOUR-APP YOUR-SERVICE-INSTANCE
	```
	Where:
	+ `YOUR-APP` is the name of your app.
	+ `YOUR-SERVICE-INSTANCE` is the name of your service instance.

1. Re-bind your app to the service instance by running the following command:

	```
	cf bind-service YOUR-APP YOUR-SERVICE-INSTANCE
	```
	Where:
	+ `YOUR-APP` is the name of your app.
	+ `YOUR-SERVICE-INSTANCE` is the name of your service instance.

1. Restage your app by running the following command:

	```
	cf restage YOUR-APP
	```
	Where `YOUR-APP` is the name of your app.


### <a id="setnew"></a> Set New CA Certification to /services/tls_ca

To have all instances use the new CA Certificate, do the following:

**If you have an existing certificate,** obtain the CA certificate and private key file corresponding
to the CA that you applied in the previous step. Then, run the following command:

<pre class="terminal">
credhub set \
    --name="/services/tls_ca" \
    --type="certificate" \
    --certificate=PEM-PATH/root.pem \
    --private=CERT-KEY
</pre>

where:

- PEM-PATH is the path to the `root.pem` file.
- CERT-KEY is the private key for the certificate.

**If you have created a new self-signed or intermediary certificate in /services/new_ca,**
set `/services/tls_ca` to the new CredHub value `/services/new_ca` that you generated in the previous step:

<pre class="terminal">
$ credhub get -n /services/new_ca -k ca > new_ca.ca
$ credhub get -n /services/new_ca -k certificate > new_ca.certificate
$ credhub get -n /services/new_ca -k private_key > new_ca.private_key
$ credhub set -n /services/tls_ca \
    --type=certificate \
    --root=new_ca.ca \
    --certificate=new_ca.certificate \
    --private=new_ca.private_key
</pre>

### <a id="remove"></a> Remove the Old CA Certificate

After your apps have reconnected to service instances with certificates generated
by the new CA, remove the old CA certificate:

1. Navigate to the **Installation Dashboard** in Ops Manager and click the **BOSH
Director** tile.

1. Click **Security**.

1. Delete the old CA certificate in **Trusted Certificates**.

1. Click **Save**.

### <a id="applychanges2"></a> Apply Changes

<p class="note warning"><strong>Warning: </strong> This procedure involves restarting
	all of the VMs in your PCF deployment to apply a CA certificate. The
	operation can take a long time to complete.</p>

To apply these changes, do the following:
 
1. Navigate back to the **Installation Dashboard**.
1. Click **Review Pending Changes**.
1. Click **ERRANDS on PCC**.
1. Select **Upgrade All Service Instances**. 
![Upgrade All Service Instances](upgrade-all-service-instances.png)
1. Click **Apply Changes**.

### <a id='rebind2'></a> Rebind Your Apps

Again, if your apps do not use the trusted store to validate server certificates, you must rebind
your apps to incorporate this last round of changes. See [Rebind Your Apps](#rebind) above.

