---
title: Managing Certificates
---

This topic describes how to check expiration dates and rotate CA certificates used by PCC for TLS communication and managed by the operator.

This topic does not describe how to rotate PCC certificates for individual service instances. 
Rotating a CA certificate as described here regenerates all the intermediate certificates for service instances.

## <a id="overview"></a> Overview

When you installed PCC, you generated a CA certificate to BOSH CredHub
by following the procedures in [Preparing for TLS](prepare-TLS.html).
You must manually rotate this CA certificate before the certificate expires or if it is compromised.

Certificate rotation is handled by the Maestro utility.

### <a id="pcc-certs"></a> PCC Certificates

PCC uses the following certificates, shown here with CredHub paths:

- **/services/tls_ca**: CredHub CA that signs certificates for every PCC service instance
- **/p-bosh/service-instance_GUID/gemfire-locator-certificate**
- **/p-bosh/service-instance_GUID/gemfire-server-certificate**

where `GUID` is the name of the service instance GUID. When rotating certificates for PCC, the
operator needs to rotate only `/services/tls_ca` as described below. The errand
`update-all-service-instances` regenerates all certificates for service instances.


## <a id="credhub"></a> Access BOSH CredHub

Pivotal Cloud Foundry (PCF) stores some of its internal CA and non-CA certificates in the BOSH
CredHub credentials store.  For more information, see [BOSH CredHub](https://docs.pivotal.io/pivotalcf/credhub/#bosh).

To access the BOSH CredHub credentials store, you must retrieve credentials from BOSH Director
and then use the credentials to log in to CredHub from the Ops Manager VM.


To access the BOSH CredHub:

1. In the Ops Manager Installation Dashboard, click the **BOSH Director** tile.

1. Click the **Credentials** tab.

1. In the **BOSH Director** section, click the link to the **BOSH Commandline Credentials**.
![CredHub Credentials](credhub-creds.png)

1. Record the values for `BOSH_CLIENT` and `BOSH_CLIENT_SECRET`.<br>
  For example:

    ```
    {"credential":"BOSH_CLIENT=ops_manager
    BOSH_CLIENT_SECRET=abCdE1FgHIjkL2m3n-3PqrsT4EUVwXy5
    BOSH_CA_CERT=/var/tempest/workspaces/default/root_ca_certificate
    BOSH_ENVIRONMENT=10.0.0.5 bosh "}
    ```
  The `BOSH_CLIENT` is the BOSH CredHub client name ("ops_manager" in this example) and the `BOSH_CLIENT_SECRET` is
  the BOSH CredHub client secret.

1. Following the procedure in
[Gather Credential and IP Address Information](https://docs.pivotal.io/pivotalcf/2-4/customizing/trouble-advanced.html#gather)
to obtain the information needed to log in to the BOSH Director VM. Record the IP address for the Ops Manager Director and the Director Credentials.

1. Log in to the Ops Manager VM by following the procedure in
[Log in to the Ops Manager VM with SSH](https://docs.pivotal.io/pivotalcf/2-4/customizing/trouble-advanced.html#ssh).

1. From the Ops Manager VM, set the API target of the CredHub CLI to your BOSH
CredHub server by running the following command:

    ```
    credhub api https://BOSH-DIRECTOR:8844 --ca-cert=/var/tempest/workspaces/default/root_ca_certificate
    ```
  where `BOSH-DIRECTOR` is the IP address of the BOSH Director VM you recorded above.
  <br><br>
  For example:
  <pre class="terminal">
  $ credhub api http<span>s:</span>//10.0.0.5:8844 \
      --ca-cert=/var/tempest/workspaces/default/root\_ca\_certificate
  </pre>

1. Log in to CredHub by running the following command:

    ```
    credhub login --client-name=CREDHUB-CLIENT-NAME --client-secret=CREDHUB-CLIENT-SECRET
    ```
    Where:<br>
    * `CREDHUB-CLIENT-NAME` is the value you recorded for `BOSH_CLIENT` earlier in this procedure ("ops_manager" in this example).
    * `CREDHUB-CLIENT-SECRET` is the value you recorded for `BOSH_CLIENT_SECRET` earlier in this procedure.

    For example:
    <pre class="terminal">
    $ credhub login \
    --client-name=ops_manager \
    --client-secret=abCdE1FgHIjkL2m3n-3PqrsT4EUVwXy5
    </pre>

## <a id="check"></a> Check Expiration Dates

You can check the expiration date for CA and PCC certificates.

To check certificate expiration dates:

1. Log in to CredHub by following the procedure in [Access BOSH CredHub](#credhub) above.

1. Run the following command:

    ```
    credhub get -n CERTIFICATE-NAME -j | jq -r .value.ca | openssl x509 -text -noout | grep -A 2 "Validity"
    ```
    where `CERTIFICATE-NAME` is the name of the certificate you are checking.<br /><br>
    For example:
    <pre class="terminal">
    $ credhub get -n /services/tls_ca -j | jq -r .value.ca | \
        openssl x509 -text -noout | grep -A 2 "Validity"
    Validity
              Not Before: Jan 23 19:04:58 2019 GMT
              Not After : Jan 23 19:04:58 2020 GMT
    </pre>

    The above command retrieves the certificate from CredHub, decrypts it, parses its JSON structure,
    and finds its `Validity` properties.
    The expiration date for the certificate is the value of `Not After`.<br><br>


##<a id='tls'></a> Rotate CA Certificates Using Maestro

The Maestro rotation procedure is documented in [Rotate the Services TLS CA and its Leaf Certificates](https://docs-pcf-staging.cfapps.io/platform/2-8/security/pcf-infrastructure/advanced-certificate-rotation.html#services-rotation).

The Maestro procedure contains multiple "rebind" operations. You may find the following Cloud Cache-specific details helpful when rebinding your apps.

## <a id='rebind'></a> Rebinding Cloud Cache Apps

If your apps do not use the trusted store to validate server certificates, you
must rebind apps to the service instance to receive the updated CA certificate.
Apps must be written in Spring to use the trusted store.

To rebind your app:

1. Stop your app by running the following command:

	```
	cf stop YOUR-APP
	```
	Where `YOUR-APP` is the name of your app.

1. Unbind your app from the service instance by running the following command:

	```
	cf unbind-service YOUR-APP YOUR-SERVICE-INSTANCE
	```
	Where:
	+ `YOUR-APP` is the name of your app.
	+ `YOUR-SERVICE-INSTANCE` is the name of your service instance.

1. Rebind your app to the service instance by running the following command:

	```
	cf bind-service YOUR-APP YOUR-SERVICE-INSTANCE
	```
	Where:
	+ `YOUR-APP` is the name of your app.
	+ `YOUR-SERVICE-INSTANCE` is the name of your service instance.

1. Restage your app by running the following command:

	```
	cf restage YOUR-APP
	```
	Where `YOUR-APP` is the name of your app.



