---
title: Pivotal Cloud Cache
owner: Cloud Cache Engineers
---

## <a id='overview'></a>Overview

This is the documentation for Pivotal Cloud Cache (PCC). 
You can download the PCC tile from the [Pivotal Network](https://network.pivotal.io/products/cloud-cache).

PCC provides a service broker for on-demand creation of in-memory data clusters that are dedicated to the PCF space and tuned for the intended use cases defined by the plan. Service operators can create multiple plans to support different use cases. PCC uses Pivotal GemFire.

You can use PCC to store any kind of data objects using the [Pivotal GemFire Java client library](http://gemfire-90-javadocs.docs.pivotal.io/).

This documentation performs the following functions:

- Describes the features and architecture of PCC
- Provides the PCF operator with instructions for installing, configuring, and maintaining PCC
- Provides app developers instructions for choosing a service plan, creating and deleting PCC service instances, and binding apps

## <a id='snapshot'></a> Product Snapshot

Current Pivotal Cloud Cache details:


- **Version:** v1.0.3
- **Release Date:** May 26, 2017
- **Software Component Version:** GemFire v9.0.3
- **Compatible Ops Manager Version:** v1.10.3
- **Compatible Elastic Runtime Version:** v1.10.4
- **vSphere Support:** Yes
- **Azure Support:** Yes
- **GCP Support:** Yes
- **OpenStack Support:** Yes
- **AWS Support:** Yes
- **IPSec Support:** No

## <a id='release-notes'></a>Release Notes

### <a id='v1.0.3'></a>Pivotal Cloud Cache v1.0.3

**<a id='new-in-this-release'></a>New in This Release**

- Upgraded to Gemfire v9.0.3
- Upgraded to v0.15.3 of On-Demand Service Broker
- Fixed JVM parameters for garbage collection
- URL routes were updated to read "cloudcache" rather than "gemfire"

### <a id='v1.0.2'></a>Pivotal Cloud Cache v1.0.2

**<a id='new-in-this-release'></a>New in This Release**

- Upgrades to v0.15.2 of On-Demand Service Broker
- Increased smoke test canary timeout to 5 minutes
- Sets global service instance quota to 50 instances
- Provides option to disable a plan and service access separately
- Validates that plan description doesnt contain any spaces



### <a id='v1.0.1'></a>Pivotal Cloud Cache v1.0.1

**<a id='new-in-this-release'></a>New in This Release**

- Upgrades to v0.15.1 of On-Demand Service Broker
- Smoke test now runs in the `system` organization
- Improved reliability of Smoke Test errand
- Adds support for gfsh `export logs` command
- Optimized size of tile to make downloading and uploading faster
- Ensured no data loss with when performing a stemcell upgrade for regions with redundancy
- Add post deployment checks that all locators properly join the cluster
- PCC broker can be configured to send logs to a syslog server
- PCC service instances will now send logs to configured syslog endpoint if enabled
- Added option to provide public IP addresses to VMs, which is necessary to allow egress on Google Cloud Platform
- Added errand when deleting tile that deletes all PCC service instances

### <a id='v1.0'></a>Pivotal Cloud Cache v1.0.0

**<a id='minimum-version-requirements'></a>Minimum Version Requirements**

- PCC requires PCF with PCF Elastic Runtime v1.9.11 or above.

**<a id='new-in-this-release'></a>New in This Release**

- Support for application look-aside cache pattern
- Multi AZ support
- On-demand provisioning
- MVP role-based access control
- Quotas, both for service instances and for number of servers in a cluster
- GemFire v9.0.2
- Managed and configure clusters using the Cloud Foundry Command Line Interface (cf CLI) service commands and the GemFire gfsh CLI

**<a id='known-issues'></a>Known Issues**

- The `Upgrade all service instances` errand can only upgrade the first 50 instances created.
- On PCF for Google Cloud Platform deployments, Ops Manager service network VMs are not assigned the correct firewall rules. 
As a result, these VMs cannot communicate with the BOSH Director, and the Cloud Cache Broker will fail to create service instances. As a workaround, modify your firewall to use subnet CIDR-based rules.
- The PCC broker will accept requests to modify instances that have ongoing BOSH operations, resulting in an asynchronous failure.

## <a id='architecture'></a>Architecture

PCC deploys cache clusters that use Pivotal GemFire to provide high availability, replication guarantees, and eventual consistency.

When you first spin up a cluster, you'll have three locators and at least four servers.

<% mermaid_diagram do %>
  graph TD;
  Client
  subgraph P-CloudCache Cluster
  subgraph locators
  Locator1
  Locator2
  Locator3
  end
  subgraph servers
  Server1
  Server2
  Server3
  Server4
  end
  end
  Client==>Locator1
  Client-->Server1
  Client-->Server2
  Client-->Server3
  Client-->Server4
<% end %>


If you scale the cluster up, you'll have more servers, increasing the capacity of the cache. There always will be three locators.

<% mermaid_diagram do %>
  graph TD;
  Client
  subgraph P-CloudCache Cluster
  subgraph locators
  Locator1
  Locator2
  Locator3
  end
  subgraph servers
  Server1
  Server2
  Server3
  Server4
  Server5
  Server6
  Server7
  end
  end
  Client==>Locator1
  Client-->Server1
  Client-->Server2
  Client-->Server3
  Client-->Server4
  Client-->Server5
  Client-->Server6
  Client-->Server7
<% end %>


When a client connects to the cluster, it first connects to a locator. The locator replies with the IP address of a server for it to talk to. The client then connects to that server.

<% mermaid_diagram do %>
  sequenceDiagram
    participant Client
    participant Locator
    participant Server1
    Client->>+Locator: What servers can I talk to?
    Locator->>-Client: Server1
    Client->>Server1: Hello!
<% end %>

When the client wants to read or write data, it sends a request directly to the server.

<% mermaid_diagram do %>
  sequenceDiagram
    participant Client
    participant Server1
    Client->>+Server1: What's the value for KEY?
    Server1->>-Client: VALUE
<% end %>


If the server doesn't have the data locally, it fetches it from another server.

<% mermaid_diagram do %>
  sequenceDiagram
    participant Client
    participant Server1
    participant Server2
    Client->>+Server1: What's the value for KEY?
    Server1->>+Server2: What's the value for KEY?
    Server2->>-Server1: VALUE
    Server1->>-Client: VALUE
<% end %>

## <a id='workflow'></a>Workflow

The workflow for the PCF admin setting up a PCC service plan:

<% mermaid_diagram do %>
  graph TD;
  subgraph PCF Admin Actions
  s1
  s2
  end

  subgraph Developer Actions
  s4
  end

  s1[1. Upload P-CloudCache.pivotal to Ops Manager]
  s2[2. Configure CloudCache Service Plans, i.e. caching-small]
  s1-->s2
  s3[3. Ops Manager deploys CloudCache Service Broker]
  s2-->s3
  s4[4. Developer calls `cf create-service p-cloudcache caching-small test`]
  s3-->s4
  s5[5. Ops Manager creates a CloudCache cluster following the caching-small specifications]
  s4-->s5
<% end %>

## <a id='recommended-usage'></a>Recommended Usage and Limitations

- PCC for PCF can be used as a cache. It supports the [look-aside cache pattern](https://content.pivotal.io/blog/an-introduction-to-look-aside-vs-inline-caching-patterns).
- PCC can be used to store objects in key/value format, where value can be any object.
- PCC works with gfsh v9.0.0 and later
- Any gfsh command not explained in the PCC documentation is **not supported**.
- PCC supports basic OQL queries, with no support for joins.

### Limitations

- Scale down of the cluster is not supported.
- Plan migrations, for example `-p` flag with the `cf update-service` command, are not supported.
- WAN (Cross Data Center) replication is not supported.
- Persistent regions are not supported.

## <a id='security'></a>Security

Pivotal recommends that you do the following:

- Run PCC for PCF in its own network
- Use a load balancer to block direct, outside access to the Gorouter

To allow PCC network access from apps, you must create application security groups that allow access on the following ports: 

* 1099
* 8080
* 40404
* 55221

For more information, see the PCF [Application Security Groups](https://docs.pivotal.io/pivotalcf/adminguide/app-sec-groups.html#creating-groups) topic.

### Authentication

Clusters are created with two default users: `cluster_operator` and `developer`. A cluster can only be accessed using one of these two users. All client applications, gfsh, and JMX clients need to use one of these users to access the cluster.

### Authorization

Default user roles `cluster_operator` and `developer` have different permissions:

- `cluster_operator` role has DATA:MANAGE, DATA:WRITE, and DATA:READ permissions.
- `developer` role has DATA:WRITE and DATA:READ permissions.

You can find more details about these permissions in the Pivotal GemFire [Implementing Authorization](http://gemfire.docs.pivotal.io/geode/managing/security/implementing_authorization.html) topic.

#### <a id='feedback'></a> Feedback

Please provide any bugs, feature requests, or questions to the [Pivotal Cloud Foundry Feedback list](mailto:pivotal–cf–feedback@pivotal.io).
