---
title: Pivotal Cloud Cache
owner: Cloud Cache Engineers
---

<p class="note"><strong>Note: Pivotal Cloud Cache (PCC) v1.2.2 is no longer supported.</strong>
    The support period for PCC has expired.
    To stay up-to-date with the latest software and security updates,
    upgrade to a supported version.</p>

## <a id='overview'></a>Overview

Pivotal Cloud Cache (PCC) is a high-performance, high-availability caching layer for Pivotal Cloud Foundry (PCF).
PCC offers an in-memory key-value store. It delivers low-latency responses to a large number of concurrent data access requests.

PCC provides a service broker to create in-memory data clusters on demand.
These clusters are dedicated to the PCF space and tuned for specific use cases defined by your service plan.
Service operators can create multiple plans to support different use cases.

PCC uses Pivotal GemFire. The [Pivotal GemFire API Documentation](http://gemfire-apis.docs.pivotal.io/) details the API for client access to data objects within Pivotal GemFire.

This documentation performs the following functions:

* Describes the features and architecture of PCC
* Provides the PCF operator with instructions for installing, configuring, and maintaining PCC
* Provides app developers instructions for choosing a service plan, creating, and deleting PCC service instances
* Provides app developers instructions for binding apps

## <a id='snapshot'></a>Product Snapshot

The following table provides version and version-support information about PCC:

<table class="nice">
    <th>Element</th>
    <th>Details</th>
    <tr>
        <td>Version</td>
        <td>v1.2.2</td>
    </tr>
    <tr>
        <td>Release date</td>
        <td>May 21, 2018</td>
    </tr>
    <tr>
        <td>Software component version</td>
        <td>Pivotal GemFire v9.3.0</td>
    </tr>
    <tr>
        <td>Compatible Ops Manager version(s)</td>
        <td>v1.11.x and v1.12.x</td>
    </tr>
    <tr>
        <td>Compatible Elastic Runtime version(s)</td>
        <td>v1.11.x and v1.12.x</td>
    </tr>
    <tr>
        <td>IaaS support</td>
        <td>AWS, Azure, GCP, OpenStack, and vSphere</td>
    </tr>
    <tr>
        <td>IPsec support</td>
        <td>Yes</td>
    </tr>
    <tr>
        <td>Required BOSH stemcell version</td>
        <td>3541.25</td>
    </tr>
    <tr>
        <td>Minimum Java buildpack version required for apps</td>
        <td>v3.13</td>
    </tr>
</table>

## <a id='other-services'></a> PCC and Other PCF Services

<%= partial '../../p-cloud-cache/odb/on-demand-service-table' %>

## <a id='architecture'></a>PCC Architecture

### <a id='GFBasics'></a>GemFire Basics

Pivotal GemFire is the data store within Pivotal Cloud Cache (PCC). A small amount of administrative GemFire setup is required for a PCC service instance, and any app will use a limited portion of the GemFire API.

The PCC architectural model is a client-server model. The clients are apps or microservices, and the servers are a set of GemFire servers maintained by a PCC service instance. The GemFire servers provide a low-latency, consistent, fault-tolerant data store within PCC.

![Client Server Model](client-server.png)

GemFire holds data in key/value pairs. Each pair is called an **entry**. Entries are logically grouped into sets called regions. A region is a map (or dictionary) data structure.

The app (client) uses PCC as a cache. A cache lookup (read) is a get operation on a GemFire region. The cache operation of a cache write is a put operation on a GemFire region.
The GemFire command-line interface, called `gfsh`, facilitates region administration. Use `gfsh` to create and destroy regions within the PCC service instance.

### <a id='pcc-cluster-architecture'></a>The PCC Cluster

PCC deploys cache clusters that use Pivotal GemFire to provide high availability, replication guarantees, and eventual consistency.

When you first spin up a cluster, you have three locators and at least four servers.

![Screenshot](Screenshot1.png)

When a client connects to the cluster, it first connects to a locator. The locator replies with the IP address of a server for it to talk to. The client then connects to that server.

![Screenshot](Screenshot2.png)

## <a id='workflow'></a>Workflow to Set Up a PCC Service

The workflow for the PCF admin setting up a PCC service plan:

![Screenshot](Screenshot3.png)

## <a id="service-network"></a>Networking for On-Demand Services

This section describes networking considerations for Pivotal Cloud Cache.

### <a id="bosh2"></a>BOSH 2.0 and the Service Network

<%= partial '../../p-cloud-cache/odb/service_networks' %>

### <a id ="architecture_networks"></a>Default Network and Service Network

<%= partial '../../p-cloud-cache/odb/on_demand_architecture' %>

### <a id="network-rules"></a>Required Networking Rules for On-Demand Services

<%= partial '../../p-cloud-cache/odb/service_networks_table' %>

<br>
Regardless of the specific network layout, the operator must ensure network
rules are set up so that connections are open as described in the table below.

<table class="nice">
  <th>This component...</th>
  <th>Must communicate with...</th>
  <th>Default TCP Port</th>
  <th>Communication direction(s)</th>
  <th>Notes</th>
  <tr>
    <td><strong>ODB</strong></td>
    <td>
        <ul>
            <li><strong>BOSH Director</strong></li>
          <li><strong>BOSH UAA</strong></li>
        </ul>
    </td>
    <td>
      <ul>
        <li>25555</li>
        <li>8443</li>
      </ul>
    </td>
    <td>One-way</td>
    <td>The default ports are not configurable.</td>
  </tr>
  <tr>
    <td><strong>ODB</strong></td>
    <td><strong>Deployed service instances</strong>
    </td>
    <td>Specific to the service (such as RabbitMQ for PCF).
      May be one or more ports.</td>
    <td>One-way</td>
    <td>This connection is for administrative tasks.
      Avoid opening general use, app-specific ports for this connection.</td>
  </tr>
  <tr>
    <td><strong>ODB</strong></td>
    <td><strong>ERT</strong>
    </td>
    <td>8443</td>
    <td>One-way</td>
    <td>The default port is not configurable.</td>
  </tr>
  <tr>
    <td><strong>Errand VMs</strong></td>
    <td>
      <ul>
        <li><strong>ERT</strong></li>
        <li><strong>ODB</strong></li>
        <li><strong>Deployed Service Instances</strong></li>
      </ul>
    </td>
    <td>
      <ul>
        <li>8443</li>
        <li>8080</li>
        <li>Specific to the service. May be one or more ports.</li>
      </ul>
    </td>
    <td>One-way</td>
    <td>The default port is not configurable.</td>
  </tr>
  <tr>
    <td><strong>BOSH Agent</strong></td>
    <td><strong>BOSH Director</strong>
    </td>
    <td>4222</td>
    <td>Two-way</td>
    <td>The BOSH Agent runs on every VM in the system, including the BOSH Director VM.
      The BOSH Agent initiates the connection with the BOSH Director.<br>
      The default port is not configurable.  </td>
  </tr>
  <tr>
    <td><strong>Deployed apps on ERT</strong></td>
    <td><strong>Deployed service instances</strong>
    </td>
    <td>Specific to the service. May be one or more ports.</td>
    <td>One-way</td>
    <td>This connection is for general use, app-specific tasks.
      Avoid opening administrative ports for this connection.</td>
  </tr>
  <tr>
    <td><strong>ERT</strong></td>
    <td><strong>ODB</strong>
    </td>
    <td>8080</td>
    <td>One-way</td>
    <td>This port may be different for individual services.
      This port may also be configurable by the operator if allowed by the
      tile developer.</td>
  </tr>
</table>

## <a id='recommended-usage'></a>Recommended Usage and Limitations

- PCC can be used as a cache. It supports the [look-aside cache pattern](https://content.pivotal.io/blog/an-introduction-to-look-aside-vs-inline-caching-patterns).
- PCC can be used to store objects in key/value format, where value can be any object.
- PCC works with gfsh. You can only use the gfsh version that matches this release's version of GemFire.
For the version of GemFire supported in this release, see [Product Snapshot](#snapshot), above.
- Any gfsh command not explained in the PCC documentation is **not supported**.
- PCC supports basic OQL queries, with no support for joins.

### Limitations

- Scale down of the cluster is not supported.
- Plan migrations, for example, `-p` flag with the `cf update-service` command, are not supported.
- WAN (Cross Data Center) replication is not supported.
- Persistent regions are not supported.

## <a id='security'></a>Security

Pivotal recommends that you do the following:

- Run PCC in its own network
- Use a load balancer to block direct, outside access to the Gorouter

To allow PCC network access from apps, you must create application security groups that allow access on the following ports:

* 1099
* 8080
* 40404
* 55221

For more information, see the PCF [Application Security Groups](https://docs.pivotal.io/pivotalcf/adminguide/app-sec-groups.html#creating-groups) topic.

PCC works with the IPsec Add-on for PCF.
For information about the IPsec Add-on for PCF,
see [Securing Data in Transit with the IPsec Add-on](https://docs.pivotal.io/addon-ipsec/index.html).

### Authentication

Clusters are created with two default users: `cluster_operator` and `developer`.
A cluster can only be accessed using one of these two users.
All client apps, gfsh, and JMX clients must authenticate as one of these users accounts to access the cluster.

### Authorization

Default user roles `cluster_operator` and `developer` have different permissions:

- `cluster_operator` role has `CLUSTER:WRITE`, `CLUSTER:READ`, `DATA:MANAGE`, `DATA:WRITE`, and `DATA:READ` permissions.
- `developer` role has `CLUSTER:READ`, `DATA:WRITE`, and `DATA:READ` permissions.

You can find more details about these permissions in the Pivotal GemFire [Implementing Authorization](http://gemfire.docs.pivotal.io/geode/managing/security/implementing_authorization.html) topic.

## <a id='bugs'></a>Known Issues

### Pulse Issue
The topology diagram might not be accurate and might show more members than are actually in the cluster.
However, the numerical value displayed on the top bar is accurate.

## <a id='feedback'></a> Feedback
Please provide any bugs, feature requests, or questions to the [Pivotal Cloud Foundry Feedback list](mailto:pivotal-cf-feedback@pivotal.io).
