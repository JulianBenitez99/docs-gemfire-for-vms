---
title: Redis API
---

## <a id="starting-redis-api"></a> Starting a Tanzu GemFire Service Instance with Redis API

When a Tanzu GemFire service instance is started, the Redis API is already available.

In order to access the API, ensure that your operator has [opened port 6379 or 16379 (TLS)](on-demand-networking.html).

Add the "redis" tag to your <%=vars.product_full%> service:
  - When creating a new service, add the option: `-t "redis"` to the create service command:
    <pre class='terminal'>
      $ cf create-service p-cloudcache PLAN-NAME YOUR-SERVICE-NAME -t "redis"
    </pre>

  - For an existing service, the tag can be updated:
    <pre class='terminal'>
      $ cf update-service YOUR-SERVICE-NAME -t "redis"
    </pre>

If you are migrating from an existing application that uses the Redis tile you will typically need to do the following:

1. If your app is still bound to the Redis service, it needs to be unbound:
    <pre class='terminal'>
      $ cf unbind-service APP-NAME SERVICE-INSTANCE-NAME
    </pre>

2. Bind your app to the new <%=vars.product_full%> service:
    <pre class='terminal'>
      $ cf bind-service APP-NAME SERVICE-INSTANCE-NAME
    </pre>

## <a id="tls"></a> TLS
Tanzu GemFire allows a service instance to be created with TLS enabled or non-TLS.  This differs from
the Redis tile which allows TLS and non-TLS ports to be active at the same time on a single service
instance.  TLS can only be enabled during service instance creation.

If TLS is enabled, all connections must be made using a TLS-capable client since the non-TLS port
will not be available.

To enable Redis and TLS on a Tanzu GemFire service instance, run the following command when you create your service:
  <pre class=”terminal”>
    $ cf create-service p-cloudcache PLAN-NAME YOUR-SERVICE-NAME -t redis -c '{"tls": true}'
  </pre>

## <a id="back-up"></a> Back Up and Restoration

As the Redis API does not persist any data to disk, it is not possible to back up and restore.

## <a id="enable-unsupported-commands"></a> Enable Unsupported Commands

The Redis API [does not support all Redis commands](https://geode.apache.org/docs/guide/<%=vars.component_product_version_nodot%>/tools_modules/redis_api_for_geode.html#included-commands).  If you
would like to enable unsupported commands (commands that have been implemented, but not fully tested), follow these steps:

1. [Connect to your instance using gfsh](accessing-instance.html#dev-establish-https)
2. Run the following command in `gfsh`: `redis --enable-unsupported-commands`
